{
	"id": "2eba57b342d5f17f1af5fbcc290cf0ef",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DenialAttack.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.0;\r\n\r\ncontract DenialAttack {\r\n     receive() external payable {\r\n        assert(false);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/DenialAttack.sol": {
				"DenialAttack": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DenialAttack.sol\":60:152  contract DenialAttack {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DenialAttack.sol\":60:152  contract DenialAttack {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/DenialAttack.sol\":135:140  false */\n      0x00\n        /* \"contracts/DenialAttack.sol\":128:141  assert(false) */\n      tag_5\n      jumpi\n      invalid\n    tag_5:\n        /* \"contracts/DenialAttack.sol\":60:152  contract DenialAttack {\r... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122094983d6428dfa46971e3c2e212d78e4f63a54e801430bd89e849517ae4c08f3964736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50604c80601d6000396000f3fe6080604052366011576000600f57fe5b005b600080fdfea264697066735822122094983d6428dfa46971e3c2e212d78e4f63a54e801430bd89e849517ae4c08f3964736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4C DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x11 JUMPI PUSH1 0x0 PUSH1 0xF JUMPI INVALID JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 SWAP9 RETURNDATASIZE PUSH5 0x28DFA46971 0xE3 0xC2 0xE2 SLT 0xD7 DUP15 0x4F PUSH4 0xA54E8014 ADDRESS 0xBD DUP10 0xE8 0x49 MLOAD PUSH27 0xE4C08F3964736F6C634300060C0033000000000000000000000000 ",
							"sourceMap": "60:92:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052366011576000600f57fe5b005b600080fdfea264697066735822122094983d6428dfa46971e3c2e212d78e4f63a54e801430bd89e849517ae4c08f3964736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x11 JUMPI PUSH1 0x0 PUSH1 0xF JUMPI INVALID JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 SWAP9 RETURNDATASIZE PUSH5 0x28DFA46971 0xE3 0xC2 0xE2 SLT 0xD7 DUP15 0x4F PUSH4 0xA54E8014 ADDRESS 0xBD DUP10 0xE8 0x49 MLOAD PUSH27 0xE4C08F3964736F6C634300060C0033000000000000000000000000 ",
							"sourceMap": "60:92:0:-:0;;;;;;135:5;128:13;;;;60:92;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "69",
								"totalCost": "15269"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 152,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 152,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 152,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 152,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 152,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 152,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 60,
									"end": 152,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 152,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 152,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 152,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 152,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 152,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 152,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 152,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 152,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 152,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 152,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 152,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 152,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 152,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 152,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122094983d6428dfa46971e3c2e212d78e4f63a54e801430bd89e849517ae4c08f3964736f6c634300060c0033",
									".code": [
										{
											"begin": 60,
											"end": 152,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 152,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 135,
											"end": 140,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 128,
											"end": 141,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 128,
											"end": 141,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 128,
											"end": 141,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 128,
											"end": 141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 152,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 152,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 152,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DenialAttack.sol\":\"DenialAttack\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DenialAttack.sol\":{\"keccak256\":\"0xdb3017448b5b19bfdcecc3f295c23aaa43286481f3ef0ce992f2f21cec18e9b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32245b9a6c39d6731eb2c60ca4cda29379f6b45545507b0f1d99d0833b5f840\",\"dweb:/ipfs/QmbpSQcPRnF5EFkZjge1RGPTnNnXsaP7tFXQrUCuXD6NF4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/DenialAttack.sol": {
				"ast": {
					"absolutePath": "contracts/DenialAttack.sol",
					"exportedSymbols": {
						"DenialAttack": [
							10
						]
					},
					"id": 11,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 10,
							"linearizedBaseContracts": [
								10
							],
							"name": "DenialAttack",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 8,
										"nodeType": "Block",
										"src": "117:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "66616c7365",
															"id": 5,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "135:5:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 4,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "128:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 6,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "128:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 7,
												"nodeType": "ExpressionStatement",
												"src": "128:13:0"
											}
										]
									},
									"documentation": null,
									"id": 9,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "97:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "117:0:0"
									},
									"scope": 10,
									"src": "90:59:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 11,
							"src": "60:92:0"
						}
					],
					"src": "33:119:0"
				},
				"id": 0
			}
		}
	}
}